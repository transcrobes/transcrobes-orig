# Generated by Django 3.1.3 on 2020-11-25 04:27

from django.conf import settings
from django.db import migrations
from djankiserv.unki.collection import Collection


def add_user_vocabulary(apps, _schema_editor):
    User = apps.get_model("auth", "User")
    for user in User.objects.all():
        with Collection(user.username, settings.DJANKISERV_DATA_ROOT) as col:
            sql = f"""
            CREATE MATERIALIZED VIEW IF NOT EXISTS {user.username}.user_vocabulary AS
            SELECT c.id as card_id, n.id as note_id, c.type as type, simplified(n.flds) as word
                FROM json_each((SELECT decks FROM {user.username}.col)::json) a
                    INNER JOIN {user.username}.cards c on c.did = a.key::bigint
                    INNER JOIN {user.username}.notes n on c.nid = n.id
                WHERE json_extract_path_text(a.value, 'name') = 'transcrobes';
            """
            col.db.execute(sql)
            sql = f"""
            CREATE INDEX IF NOT EXISTS {user.username}_vocabulary_idx
                ON {user.username}.user_vocabulary (word)"""
            col.db.execute(sql)

            # this is so we can refresh "concurrently"
            sql = f"""
            CREATE UNIQUE INDEX IF NOT EXISTS {user.username}_vocabulary_card_idx
                ON {user.username}.user_vocabulary (card_id)"""
            col.db.execute(sql)


class Migration(migrations.Migration):

    dependencies = [
        ("ankrobes", "0001_initial"),
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.RunPython(add_user_vocabulary),
    ]
