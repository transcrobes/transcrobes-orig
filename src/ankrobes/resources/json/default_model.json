{
  "1462427929062": {
    "css": "/* START OF HANPING PREFERENCES */\n.cmn_hanzi_type.simp_trad {} /* simp, simp_trad, trad, trad_simp */\n.cmn_phonetic_type.pinyin_marked {} /* pinyin_marked, pinyin_numbered, zhuyin_marked, none */\n.cmn_coloring_strategy.hanzi {} /* hanzi, phonetic, none */\n.cmn_tone1 {color: dodgerblue;} /* #RRGGBB or blue, red etc */\n.cmn_tone2 {color: forestgreen;}\n.cmn_tone3 {color: darkorange;}\n.cmn_tone4 {color: crimson;}\n.cmn_tone5 {color: grey;}\n/* END OF HANPING PREFERENCES */\n\n.card {font-family: sans-serif; font-size: 20px; text-align: center; color: #222222;}\na {pointer-events: none; text-decoration: none; color: #222222;}\n.android a {pointer-events: auto;}\n.night_mode a {text-decoration: none; color: white;}\n.hanzi {font-size: 48px;}\n.phonetic {font-size: 24px;}\n.english {font-size: 32px;}\n.meaning {font-size: 20px;}\n.links_button {\n\tdisplay: none; padding: 8px 16px 6px 16px;\n\tborder-style: solid; border-width: 1px 1px; border-radius: 4px;\n\ttext-align: center; text-decoration: none; font-size: 14px;\n}\n.android .links_button {display:inline-block;}\n.play_button {display: none; padding: 12px 12px;}\n.android .play_button {display:inline-block;}\n.play_icon {\n\tbox-sizing: border-box; width: 18px; height: 24px;\n\tborder-top: 12px solid transparent; border-left: 18px solid; border-bottom: 12px solid transparent;\n}\n",
    "did": 1462504812571,
    "flds": [
      {
        "font": "Arial",
        "media": [],
        "name": "Simplified",
        "ord": 0,
        "rtl": false,
        "size": 20,
        "sticky": false
      },
      {
        "font": "Arial",
        "media": [],
        "name": "Pinyin",
        "ord": 1,
        "rtl": false,
        "size": 20,
        "sticky": false
      },
      {
        "font": "Arial",
        "media": [],
        "name": "Meaning",
        "ord": 2,
        "rtl": false,
        "size": 20,
        "sticky": false
      }
    ],
    "id": 1462427929062,
    "latexPost": "\\end{document}",
    "latexPre": "\\documentclass[12pt]{article}\n\\special{papersize=3in,5in}\n\\usepackage[utf8]{inputenc}\n\\usepackage{amssymb,amsmath}\n\\pagestyle{empty}\n\\setlength{\\parindent}{0in}\n\\begin{document}\n",
    "latexsvg": false,
    "mod": 1599265990,
    "name": "transcrobes",
    "req": [
      [
        0,
        "any",
        [
          0,
          1
        ]
      ],
      [
        1,
        "any",
        [
          1
        ]
      ],
      [
        2,
        "any",
        [
          0,
          1,
          2
        ]
      ]
    ],
    "sortf": 1,
    "tags": [],
    "tmpls": [
      {
        "afmt": "\n<!--\n\"Hanping Chinese Templates for Anki\" by EmberMitre is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License.\n\nHanping Chinese Dictionary on Google Play: https://play.google.com/store/apps/details?id=com.embermitre.hanping.app.pro\n-->\n<a class=hanzi href='intent:#Intent;action=com.hanpingchinese.cmn.intent.action.DETAILS;package=com.embermitre.hanping.app.pro;S.p={{text:Pinyin}};S.s={{text:Simplified}};S.t=;S.LANG=cmn;S._SOURCE=anki;end'>{{Simplified}}</a><br><br>{{#Pinyin}}<a class=phonetic href='intent:#Intent;action=com.hanpingchinese.cmn.intent.action.PLAY;package=com.embermitre.hanping.app.pro;S.p={{text:Pinyin}};S.s={{text:Simplified}};S.t=;S.LANG=cmn;S._SOURCE=anki;end'>{{Pinyin}}</a>{{/Pinyin}}<br><br><span class=meaning>{{Meaning}}</span><br><br><a class=links_button href='intent:#Intent;action=com.hanpingchinese.cmn.intent.action.LINKS;package=com.embermitre.hanping.app.pro;S.p={{text:Pinyin}};S.s={{text:Simplified}};S.t=;S.LANG=cmn;S._SOURCE=anki;end'>links</a>\n<script>\nfunction readHanziTypePref(langCode) {\n\tvar defaultValue = langCode == 'yue' ? 'trad' : 'simp_trad';\n\treturn readPref(langCode, 'hanzi_type', defaultValue);\n}\n\nfunction readPhoneticTypePref(langCode) {\n\tvar defaultValue = langCode == 'yue' ? 'jyutping_superscript' : 'pinyin_marked';\n\treturn readPref(langCode, 'phonetic_type', defaultValue);\n}\n\nfunction readColoringStrategyPref(langCode) {\n\treturn readPref(langCode, 'coloring_strategy', 'hanzi');\n}\n\nfunction readPref(langCode, prefNameWithoutLangCode, defaultValue) {\n\tvar prefix = '.' + langCode + '_' + prefNameWithoutLangCode + '.';\n\tfor (var i = 0; i < document.styleSheets.length; i++) {\n\t\tvar ss = document.styleSheets[i];\n\t\tif (!ss) {\n\t\t\tcontinue;\n\t\t}\n\t\ttry {\n\t\t\tvar classes = ss.rules || ss.cssRules;\n\t\t\tif (!classes) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tfor (var x = 0; x < classes.length; x++) {\n\t\t\t\tvar cls = classes[x];\n\t\t\t\tif (cls && cls.selectorText && cls.selectorText.indexOf(prefix) == 0) {\n\t\t\t\t\tvar result = cls.selectorText.substr(prefix.length);\n\t\t\t\t\tconsole.log(prefNameWithoutLangCode + \"=\" + result);\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.log(\"caught: \" + err.name + \": \" + err.message);\n\t\t\tcontinue;\n\t\t}\n\t}\n\treturn defaultValue;\n}\n\nfunction toHanzi(langCode, trad, simp, hideTones) {\n\ttrad = normalizeHanzi(trad);\n\tsimp = normalizeHanzi(simp);\n\tif (!trad && !simp) {\n\t\treturn null;\n\t}\n\tvar hanziType = readHanziTypePref(langCode);\n\tvar coloringStrategy = readColoringStrategyPref(langCode);\n\tvar coloringEnabled = !hideTones && coloringStrategy == 'hanzi';\n\tvar preferTrad = hanziType.indexOf('trad') == 0; // startsWith() doesn't work :(\n\tvar primaryHanzi = preferTrad ? trad : simp;\n\tvar secondaryHanzi = preferTrad ? simp : trad;\n\tvar showBoth = hanziType.indexOf('_') >= 0;\n\tvar result;\n\tif (!primaryHanzi) {\n\t\tresult = '[' + secondaryHanzi + ']';\n\t}\n\telse if (!secondaryHanzi || !showBoth || primaryHanzi.replace(/<.+?>/g,'') == secondaryHanzi.replace(/<.+?>/g,'')) {\n\t\tresult = primaryHanzi;\n\t}\n\telse {\n\t\tvar spanPatt = /(<span class=\"?(?:[a-z]{3}_)?tone\\d\"?>)(.+?)(<\\/span>)/;\n\t\tvar remainingPrimary = primaryHanzi;\n\t\tvar remainingSecondary = secondaryHanzi;\n\t\tvar maskedSecondary = '';\n\t\twhile (remainingPrimary != '' && remainingSecondary != '') {\n\t\t\tvar primaryMatch = spanPatt.exec(remainingPrimary);\n\t\t\tif (!primaryMatch) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tvar secondaryMatch = spanPatt.exec(remainingSecondary);\n\t\t\tif (!secondaryMatch) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tmaskedSecondary += remainingSecondary.substring(0, secondaryMatch.index);\n\t\t\tif (primaryMatch[2] == secondaryMatch[2]) { // sufficient to ignore spans when comparing\n\t\t\t\tmaskedSecondary += secondaryMatch[1] + '-' + secondaryMatch[3];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmaskedSecondary += secondaryMatch[0];\n\t\t\t}\n\t\t\tremainingPrimary = remainingPrimary.substr(primaryMatch.index + primaryMatch[0].length)\n\t\t\tremainingSecondary = remainingSecondary.substr(secondaryMatch.index + secondaryMatch[0].length)\n\t\t}\n\t\tmaskedSecondary += remainingSecondary;\n\t\tif (primaryHanzi == maskedSecondary || maskedSecondary == '') {\n\t\t\tresult = primaryHanzi;\n\t\t}\n\t\telse {\n\t\t\tresult = primaryHanzi + ' [' + maskedSecondary + ']';\n\t\t}\n\t}\n\tif (!coloringEnabled) {\n\t\treturn result.replace(/<span class=\"?(?:[a-z]{3}_)?tone\\d\"?>(.+?)<\\/span>/g, '$1');\n\t}\n\treturn result;\n}\n\nfunction normalizeHanzi(hanzi) {\n\tif (!hanzi) {\n\t\treturn '';\n\t}\n\tif (hanzi.charAt(0) == '[' && hanzi.charAt(hanzi.length - 1) == ']') {\n\t\treturn '';\n\t}\n\treturn decodeURIComponent(hanzi);\n}\n\nfunction toPhonetic(langCode, pinyinNumbered, hideTones) {\n\tif (!pinyinNumbered) {\n\t\treturn '';\n\t}\n\tpinyinNumbered = decodeURIComponent(pinyinNumbered);\n\tvar supportedLangCode = 'cmn';\n\tif (!langCode && langCode != supportedLangCode) {\n\t\tthrow 'Unexpected lang code: ' + langCode;\n\t}\n\tvar phoneticType = readPhoneticTypePref(supportedLangCode);\n\tvar coloringEnabled = readColoringStrategyPref(supportedLangCode) == 'phonetic';\n\tif (phoneticType == 'none') {\n\t\treturn '<div class=play_button><div class=play_icon></div></div>';\n\t}\n\tvar isZhuyin = phoneticType.indexOf('zhuyin') >= 0;\n\tvar toneStyle; // 0=numbers, 1=marks, other=hidden\n\tif (hideTones) {\n\t\ttoneStyle = -1;\n\t}\n\telse {\n\t\ttoneStyle = phoneticType.indexOf('marked') >= 0 ? 1 : 0;\n\t}\n\tvar showColoring = toneStyle >= 0 && coloringEnabled;\n\tvar remainingText = pinyinNumbered;\n\tvar result = '';\n\tvar patt = /\\b([a-z]{1,6})([1-5])\\b/i;\n\tvar match;\n\twhile (match = patt.exec(remainingText)) {\n\t\tvar tonelessSyllable = match[1];\n\t\tvar toneNum = match[2];\n\t\tvar newSyllable = isZhuyin ? toZhuyinSyllable(tonelessSyllable, toneNum, toneStyle) : toPinyinSyllable(tonelessSyllable, toneNum, toneStyle);\n\t\tresult += remainingText.substring(0, match.index);\n\t\tif (!newSyllable) {\n\t\t\tresult += match[1] + match[2];\n\t\t}\n\t\telse {\n\t\t\tif (showColoring) {\n\t\t\t\tresult += '<span class=' + supportedLangCode + '_tone' + match[2] + '>' + newSyllable + '</span>';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tresult += newSyllable;\n\t\t\t}\n\t\t}\n\t\tremainingText = remainingText.substr(match.index + match[0].length);\n\t}\n\treturn result + remainingText;\n}\n\nfunction toPinyinSyllable(tonelessSyllable, toneNum, toneStyle) {\n\tswitch (toneStyle) {\n\tcase 0:\n\t\treturn tonelessSyllable + toneNum;\n\tcase 1:\n\t\treturn toMarkedPinyinSyllable(tonelessSyllable, toneNum);\n\tdefault:\n\t\treturn tonelessSyllable;\n\t}\n}\n\nvar toneCharMap = {};\ntoneCharMap['a']='āáǎà';\ntoneCharMap['e']='ēéěè';\ntoneCharMap['i']='īíǐì';\ntoneCharMap['o']='ōóǒò';\ntoneCharMap['u']='ūúǔù';\ntoneCharMap['ü']='ǖǘǚǜ';\ntoneCharMap['m']=' ḿ  ';\ntoneCharMap['n']=' ńňǹ';\n\nfunction toMarkedPinyinSyllable(tonelessPinyin, toneNum) {\n\tif (toneNum < 1 || toneNum > 5 || tonelessPinyin.length < 1) {\n\t\treturn tonelessPinyin + toneNum; // not real pinyin\n\t}\n\ttonelessPinyin = tonelessPinyin.replace('v', 'ü');\n\tif (toneNum == 5) {\n\t\treturn tonelessPinyin;\n\t}\n\tvar charToReplace;\n\tvar vowels = tonelessPinyin.replace(/[^aeiouü]/g, '');\n\tswitch (vowels.length) {\n\t\tcase 0:\n\t\t\tcharToReplace = tonelessPinyin.charAt(0);\n\t\t\tbreak;\n\t\tcase 1:\n\t\t\tcharToReplace = vowels.charAt(0);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tif (vowels.indexOf(\"a\") >= 0) {\n\t\t\t\tcharToReplace = 'a';\n\t\t\t}\n\t\t\telse if (vowels.indexOf(\"e\") >= 0) {\n\t\t\t\tcharToReplace = 'e';\n\t\t\t}\n\t\t\telse if (vowels.indexOf(\"ou\") >= 0) {\n\t\t\t\tcharToReplace = 'o';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcharToReplace = vowels.charAt(1);\n\t\t\t}\n\t}\n\tvar tonesStr = toneCharMap[charToReplace];\n\tvar replacementChar = tonesStr == null ? null : tonesStr.charAt(toneNum - 1);\n\tif (replacementChar == null || replacementChar == ' ') {\n\t\treturn tonelessPinyin + toneNum;\n\t}\n\telse {\n\t\treturn tonelessPinyin.replace(charToReplace, replacementChar);\n\t}\n}\n\nvar zhuyinTonemarks = [ \"\", \"ˊ\", \"ˇ\", \"ˋ\", \"˙\" ]; // index 0 is tone 1 etc\nvar p2z = {};\np2z['a']='ㄚ';p2z['ai']='ㄞ';p2z['an']='ㄢ';p2z['ang']='ㄤ';p2z['ao']='ㄠ';p2z['ba']='ㄅㄚ';p2z['bai']='ㄅㄞ';p2z['ban']='ㄅㄢ';p2z['bang']='ㄅㄤ';p2z['bao']='ㄅㄠ';p2z['bei']='ㄅㄟ';p2z['ben']='ㄅㄣ';p2z['beng']='ㄅㄥ';p2z['bi']='ㄅㄧ';p2z['bian']='ㄅㄧㄢ';p2z['biao']='ㄅㄧㄠ';p2z['bie']='ㄅㄧㄝ';p2z['bin']='ㄅㄧㄣ';p2z['bing']='ㄅㄧㄥ';p2z['bo']='ㄅㄛ';p2z['bu']='ㄅㄨ';p2z['ca']='ㄘㄚ';p2z['cai']='ㄘㄞ';p2z['can']='ㄘㄢ';p2z['cang']='ㄘㄤ';p2z['cao']='ㄘㄠ';p2z['ce']='ㄘㄜ';p2z['cei']='ㄘㄟ';p2z['cen']='ㄘㄣ';p2z['ceng']='ㄘㄥ';p2z['cha']='ㄔㄚ';p2z['chai']='ㄔㄞ';p2z['chan']='ㄔㄢ';p2z['chang']='ㄔㄤ';p2z['chao']='ㄔㄠ';p2z['che']='ㄔㄜ';p2z['chen']='ㄔㄣ';p2z['cheng']='ㄔㄥ';p2z['chi']='ㄔ';p2z['chong']='ㄔㄨㄥ';p2z['chou']='ㄔㄡ';p2z['chu']='ㄔㄨ';p2z['chua']='ㄔㄨㄚ';p2z['chuai']='ㄔㄨㄞ';p2z['chuan']='ㄔㄨㄢ';p2z['chuang']='ㄔㄨㄤ';p2z['chui']='ㄔㄨㄟ';p2z['chun']='ㄔㄨㄣ';p2z['chuo']='ㄔㄨㄛ';p2z['ci']='ㄘ';p2z['cong']='ㄘㄨㄥ';p2z['cou']='ㄔㄡ';p2z['cu']='ㄘㄨ';p2z['cuan']='ㄘㄨㄢ';p2z['cui']='ㄘㄨㄟ';p2z['cun']='ㄘㄨㄣ';p2z['cuo']='ㄘㄨㄛ';p2z['da']='ㄉㄚ';p2z['dai']='ㄉㄞ';p2z['dan']='ㄉㄢ';p2z['dang']='ㄉㄤ';p2z['dao']='ㄉㄠ';p2z['de']='ㄉㄜ';p2z['dei']='ㄉㄟ';p2z['den']='ㄉㄣ';p2z['deng']='ㄉㄥ';p2z['di']='ㄉㄧ';p2z['dia']='ㄉㄧㄚ';p2z['dian']='ㄉㄧㄢ';p2z['diao']='ㄉㄧㄠ';p2z['die']='ㄉㄧㄝ';p2z['ding']='ㄉㄧㄥ';p2z['diu']='ㄉㄧㄡ';p2z['dong']='ㄉㄨㄥ';p2z['dou']='ㄉㄡ';p2z['du']='ㄉㄨ';p2z['duan']='ㄉㄨㄢ';p2z['dui']='ㄉㄨㄟ';p2z['dun']='ㄉㄨㄣ';p2z['duo']='ㄉㄨㄛ';p2z['e']='ㄜ';p2z['ei']='ㄟ';p2z['en']='ㄣ';p2z['eng']='ㄥ';p2z['er']='ㄦ';p2z['fa']='ㄈㄚ';p2z['fan']='ㄈㄢ';p2z['fang']='ㄈㄤ';p2z['fei']='ㄈㄟ';p2z['fen']='ㄈㄣ';p2z['feng']='ㄈㄥ';p2z['fo']='ㄈㄛ';p2z['fou']='ㄈㄡ';p2z['fu']='ㄈㄨ';p2z['ga']='ㄍㄚ';p2z['gai']='ㄍㄞ';p2z['gan']='ㄍㄢ';p2z['gang']='ㄍㄤ';p2z['gao']='ㄍㄠ';p2z['ge']='ㄍㄜ';p2z['gei']='ㄍㄟ';p2z['gen']='ㄍㄣ';p2z['geng']='ㄍㄥ';p2z['gong']='ㄍㄨㄥ';p2z['gou']='ㄍㄡ';p2z['gu']='ㄍㄨ';p2z['gua']='ㄍㄨㄚ';p2z['guai']='ㄍㄨㄞ';p2z['guan']='ㄍㄨㄢ';p2z['guang']='ㄍㄨㄤ';p2z['gui']='ㄍㄨㄟ';p2z['gun']='ㄍㄨㄣ';p2z['guo']='ㄍㄨㄛ';p2z['ha']='ㄏㄚ';p2z['hai']='ㄏㄞ';p2z['han']='ㄏㄢ';p2z['hang']='ㄏㄤ';p2z['hao']='ㄏㄠ';p2z['he']='ㄏㄜ';p2z['hei']='ㄏㄟ';p2z['hen']='ㄏㄣ';p2z['heng']='ㄏㄥ';p2z['hong']='ㄏㄨㄥ';p2z['hou']='ㄏㄡ';p2z['hu']='ㄏㄨ';p2z['hua']='ㄏㄨㄚ';p2z['huai']='ㄏㄨㄞ';p2z['huan']='ㄏㄨㄢ';p2z['huang']='ㄏㄨㄤ';p2z['hui']='ㄏㄨㄟ';p2z['hun']='ㄏㄨㄣ';p2z['huo']='ㄏㄨㄛ';p2z['ji']='ㄐㄧ';p2z['jia']='ㄐㄧㄚ';p2z['jian']='ㄐㄧㄢ';p2z['jiang']='ㄐㄧㄤ';p2z['jiao']='ㄐㄧㄠ';p2z['jie']='ㄐㄧㄝ';p2z['jin']='ㄐㄧㄣ';p2z['jing']='ㄐㄧㄥ';p2z['jiong']='ㄐㄩㄥ';p2z['jiu']='ㄐㄧㄡ';p2z['ju']='ㄐㄩ';p2z['juan']='ㄐㄩㄢ';p2z['jue']='ㄐㄩㄝ';p2z['jun']='ㄐㄩㄣ';p2z['ka']='ㄎㄚ';p2z['kai']='ㄎㄞ';p2z['kan']='ㄎㄢ';p2z['kang']='ㄎㄤ';p2z['kao']='ㄎㄠ';p2z['ke']='ㄎㄜ';p2z['kei']='ㄎㄟ';p2z['ken']='ㄎㄣ';p2z['keng']='ㄎㄥ';p2z['kong']='ㄎㄨㄥ';p2z['kou']='ㄎㄡ';p2z['ku']='ㄎㄨ';p2z['kua']='ㄎㄨㄚ';p2z['kuai']='ㄎㄨㄞ';p2z['kuan']='ㄎㄨㄢ';p2z['kuang']='ㄎㄨㄤ';p2z['kui']='ㄎㄨㄟ';p2z['kun']='ㄎㄨㄣ';p2z['kuo']='ㄎㄨㄛ';p2z['la']='ㄌㄚ';p2z['lai']='ㄌㄞ';p2z['lan']='ㄌㄢ';p2z['lang']='ㄌㄤ';p2z['lao']='ㄌㄠ';p2z['le']='ㄌㄜ';p2z['lei']='ㄌㄟ';p2z['leng']='ㄌㄥ';p2z['li']='ㄌㄧ';p2z['lia']='ㄌㄧㄚ';p2z['lian']='ㄌㄧㄢ';p2z['liang']='ㄌㄧㄤ';p2z['liao']='ㄌㄧㄠ';p2z['lie']='ㄌㄧㄝ';p2z['lin']='ㄌㄧㄣ';p2z['ling']='ㄌㄧㄥ';p2z['liu']='ㄌㄧㄡ';p2z['lo']='ㄌㄛ';p2z['long']='ㄌㄨㄥ';p2z['lou']='ㄌㄡ';p2z['lu']='ㄌㄨ';p2z['luan']='ㄌㄨㄢ';p2z['lun']='ㄌㄨㄣ';p2z['luo']='ㄌㄨㄛ';p2z['lv']='ㄌㄩ';p2z['lve']='ㄌㄩㄝ';p2z['ma']='ㄇㄚ';p2z['mai']='ㄇㄞ';p2z['man']='ㄇㄢ';p2z['mang']='ㄇㄤ';p2z['mao']='ㄇㄠ';p2z['me']='ㄇㄜ';p2z['mei']='ㄇㄟ';p2z['men']='ㄇㄣ';p2z['meng']='ㄇㄥ';p2z['mi']='ㄇㄧ';p2z['mian']='ㄇㄧㄢ';p2z['miao']='ㄇㄧㄠ';p2z['mie']='ㄇㄧㄝ';p2z['min']='ㄇㄧㄣ';p2z['ming']='ㄇㄧㄥ';p2z['miu']='ㄇㄧㄡ';p2z['mo']='ㄇㄛ';p2z['mou']='ㄇㄡ';p2z['mu']='ㄇㄨ';p2z['na']='ㄋㄚ';p2z['nai']='ㄋㄞ';p2z['nan']='ㄋㄢ';p2z['nang']='ㄋㄤ';p2z['nao']='ㄋㄠ';p2z['ne']='ㄋㄜ';p2z['nei']='ㄋㄟ';p2z['nen']='ㄋㄣ';p2z['neng']='ㄋㄥ';p2z['ni']='ㄋㄧ';p2z['nian']='ㄋㄧㄢ';p2z['niang']='ㄋㄧㄤ';p2z['niao']='ㄋㄧㄠ';p2z['nie']='ㄋㄧㄝ';p2z['nin']='ㄋㄧㄣ';p2z['ning']='ㄋㄧㄥ';p2z['niu']='ㄋㄧㄡ';p2z['nong']='ㄋㄨㄥ';p2z['nou']='ㄋㄨㄡ';p2z['nu']='ㄋㄨ';p2z['nuan']='ㄋㄨㄢ';p2z['nuo']='ㄋㄨㄛ';p2z['nv']='ㄋㄩ';p2z['nve']='ㄋㄩㄝ';p2z['o']='ㄛ';p2z['ou']='ㄡ';p2z['pa']='ㄆㄚ';p2z['pai']='ㄆㄞ';p2z['pan']='ㄆㄢ';p2z['pang']='ㄆㄤ';p2z['pao']='ㄆㄠ';p2z['pei']='ㄆㄟ';p2z['pen']='ㄆㄣ';p2z['peng']='ㄆㄥ';p2z['pi']='ㄆㄧ';p2z['pian']='ㄆㄧㄢ';p2z['piao']='ㄆㄧㄠ';p2z['pie']='ㄆㄧㄝ';p2z['pin']='ㄆㄧㄣ';p2z['ping']='ㄆㄧㄥ';p2z['po']='ㄆㄛ';p2z['pou']='ㄆㄡ';p2z['pu']='ㄆㄨ';p2z['qi']='ㄑㄧ';p2z['qia']='ㄑㄧㄚ';p2z['qian']='ㄑㄧㄢ';p2z['qiang']='ㄑㄧㄤ';p2z['qiao']='ㄑㄧㄠ';p2z['qie']='ㄑㄧㄝ';p2z['qin']='ㄑㄧㄣ';p2z['qing']='ㄑㄧㄥ';p2z['qiong']='ㄑㄩㄥ';p2z['qiu']='ㄑㄧㄡ';p2z['qu']='ㄑㄩ';p2z['quan']='ㄑㄩㄢ';p2z['que']='ㄑㄩㄝ';p2z['qun']='ㄑㄩㄣ';p2z['r']='ㄦ';p2z['ran']='ㄖㄢ';p2z['rang']='ㄖㄤ';p2z['rao']='ㄖㄠ';p2z['re']='ㄖㄜ';p2z['ren']='ㄖㄣ';p2z['reng']='ㄖㄥ';p2z['ri']='ㄖ';p2z['rong']='ㄖㄨㄥ';p2z['rou']='ㄖㄡ';p2z['ru']='ㄖㄨ';p2z['ruan']='ㄖㄨㄢ';p2z['rui']='ㄖㄨㄟ';p2z['run']='ㄖㄨㄣ';p2z['ruo']='ㄖㄨㄛ';p2z['sa']='ㄙㄚ';p2z['sai']='ㄙㄞ';p2z['san']='ㄙㄢ';p2z['sang']='ㄙㄤ';p2z['sao']='ㄙㄠ';p2z['se']='ㄙㄜ';p2z['sen']='ㄙㄣ';p2z['seng']='ㄙㄥ';p2z['sha']='ㄕㄚ';p2z['shai']='ㄕㄞ';p2z['shan']='ㄕㄢ';p2z['shang']='ㄕㄤ';p2z['shao']='ㄕㄠ';p2z['she']='ㄕㄜ';p2z['shei']='ㄕㄟ';p2z['shen']='ㄕㄣ';p2z['sheng']='ㄕㄥ';p2z['shi']='ㄕ';p2z['shou']='ㄕㄡ';p2z['shu']='ㄕㄨ';p2z['shua']='ㄕㄨㄚ';p2z['shuai']='ㄕㄨㄞ';p2z['shuan']='ㄕㄨㄢ';p2z['shuang']='ㄕㄨㄤ';p2z['shui']='ㄕㄨㄟ';p2z['shun']='ㄕㄨㄣ';p2z['shuo']='ㄕㄨㄛ';p2z['si']='ㄙ';p2z['song']='ㄙㄨㄥ';p2z['sou']='ㄙㄡ';p2z['su']='ㄙㄨ';p2z['suan']='ㄙㄨㄢ';p2z['sui']='ㄙㄨㄟ';p2z['sun']='ㄙㄨㄣ';p2z['suo']='ㄙㄨㄛ';p2z['ta']='ㄊㄚ';p2z['tai']='ㄊㄞ';p2z['tan']='ㄊㄢ';p2z['tang']='ㄊㄤ';p2z['tao']='ㄊㄠ';p2z['te']='ㄊㄜ';p2z['tei']='ㄊㄟ';p2z['teng']='ㄊㄥ';p2z['ti']='ㄊㄧ';p2z['tian']='ㄊㄧㄢ';p2z['tiao']='ㄊㄧㄠ';p2z['tie']='ㄊㄧㄝ';p2z['ting']='ㄊㄧㄥ';p2z['tong']='ㄊㄨㄥ';p2z['tou']='ㄊㄡ';p2z['tu']='ㄊㄨ';p2z['tuan']='ㄊㄨㄢ';p2z['tui']='ㄊㄨㄟ';p2z['tun']='ㄊㄨㄣ';p2z['tuo']='ㄊㄨㄛ';p2z['wa']='ㄨㄚ';p2z['wai']='ㄨㄞ';p2z['wan']='ㄨㄢ';p2z['wang']='ㄨㄤ';p2z['wei']='ㄨㄟ';p2z['wen']='ㄨㄣ';p2z['weng']='ㄨㄥ';p2z['wo']='ㄨㄛ';p2z['wu']='ㄨ';p2z['xi']='ㄒㄧ';p2z['xia']='ㄒㄧㄚ';p2z['xian']='ㄒㄧㄢ';p2z['xiang']='ㄒㄧㄤ';p2z['xiao']='ㄒㄧㄠ';p2z['xie']='ㄒㄧㄝ';p2z['xin']='ㄒㄧㄣ';p2z['xing']='ㄒㄧㄥ';p2z['xiong']='ㄒㄩㄥ';p2z['xiu']='ㄒㄧㄡ';p2z['xu']='ㄒㄩ';p2z['xuan']='ㄒㄩㄢ';p2z['xue']='ㄒㄩㄝ';p2z['xun']='ㄒㄩㄣ';p2z['ya']='ㄧㄚ';p2z['yan']='ㄧㄢ';p2z['yang']='ㄧㄤ';p2z['yao']='ㄧㄠ';p2z['ye']='ㄧㄝ';p2z['yi']='ㄧ';p2z['yin']='ㄧㄣ';p2z['ying']='ㄧㄥ';p2z['yo']='ㄧㄛ';p2z['yong']='ㄩㄥ';p2z['you']='ㄧㄡ';p2z['yu']='ㄩ';p2z['yuan']='ㄩㄢ';p2z['yue']='ㄩㄝ';p2z['yun']='ㄩㄣ';p2z['za']='ㄗㄚ';p2z['zai']='ㄗㄞ';p2z['zan']='ㄗㄢ';p2z['zang']='ㄗㄤ';p2z['zao']='ㄗㄠ';p2z['ze']='ㄗㄜ';p2z['zei']='ㄗㄟ';p2z['zen']='ㄗㄣ';p2z['zeng']='ㄗㄥ';p2z['zha']='ㄓㄚ';p2z['zhai']='ㄓㄞ';p2z['zhan']='ㄓㄢ';p2z['zhang']='ㄓㄤ';p2z['zhao']='ㄓㄠ';p2z['zhe']='ㄓㄜ';p2z['zhei']='ㄓㄟ';p2z['zhen']='ㄓㄣ';p2z['zheng']='ㄓㄥ';p2z['zhi']='ㄓ';p2z['zhong']='ㄓㄨㄥ';p2z['zhou']='ㄓㄡ';p2z['zhu']='ㄓㄨ';p2z['zhua']='ㄓㄨㄚ';p2z['zhuai']='ㄓㄨㄞ';p2z['zhuan']='ㄓㄨㄢ';p2z['zhuang']='ㄓㄨㄤ';p2z['zhui']='ㄓㄨㄟ';p2z['zhun']='ㄓㄨㄣ';p2z['zhuo']='ㄓㄨㄛ';p2z['zi']='ㄗ';p2z['zong']='ㄗㄨㄥ';p2z['zou']='ㄗㄡ';p2z['zu']='ㄗㄨ';p2z['zuan']='ㄗㄨㄢ';p2z['zui']='ㄗㄨㄟ';p2z['zun']='ㄗㄨㄣ';p2z['zuo']='ㄗㄨㄛ';\n\nfunction toZhuyinSyllable(tonelessPinyin, toneNum, toneStyle) {\n\tvar tonelessZhuyin = p2z[tonelessPinyin];\n\tif (!tonelessZhuyin || toneNum < 1 || toneNum > 5) {\n\t\treturn null;\n\t}\n\tswitch (toneStyle) {\n\tcase 0:\n\t\treturn tonelessZhuyin + toneNum;\n\tcase 1:\n\t\treturn tonelessZhuyin + zhuyinTonemarks[toneNum - 1];\n\tdefault:\n\t\treturn tonelessZhuyin;\n\t}\n}\n\nfunction toMeaning(langCode, rawMeaning, hideTones) {\n\tvar patt = /<span class=chinese_word>(.*?)\\|(.*?)\\|(.*?)<\\/span>/i;\n\tvar result = '';\n\tvar remainingText = rawMeaning;\n\tvar match;\n\twhile (match = patt.exec(remainingText)) {\n\t\tvar trad = decodeURIComponent(match[1]);\n\t\tvar simp = decodeURIComponent(match[2]);\n\t\tvar rawPhonetic = decodeURIComponent(match[3]);\n\t\tresult += remainingText.substring(0, match.index);\n\t\tresult += toHanzi(langCode, trad, simp, true);\n\t\tvar phonetic = toPhonetic(langCode, rawPhonetic, hideTones);\n\t\tif (phonetic) {\n\t\t\tresult += ' (' + phonetic + ')';\n\t\t}\n\t\tremainingText = remainingText.substr(match.index + match[0].length);\n\t};\n\tresult += remainingText;\n\tresult = result.replace(/<.+?>/g, '');\n\tresult = decodeURIComponent(result);\n\treturn result;\n}\n\ndocument.getElementsByClassName('hanzi')[0].innerHTML=toHanzi('cmn', '', '{{Simplified}}', false);\ndocument.getElementsByClassName('phonetic')[0].innerHTML=toPhonetic('cmn', '{{Pinyin}}', false);\ndocument.getElementsByClassName('meaning')[0].innerHTML=toMeaning('cmn', '{{Meaning}}', false);\n</script>\n",
        "bafmt": "",
        "bfont": "Arial",
        "bqfmt": "",
        "bsize": 12,
        "did": null,
        "name": "Hanzi Question",
        "ord": 0,
        "qfmt": "<!--\n\"Hanping Chinese Templates for Anki\" by EmberMitre is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License.\n\nHanping Chinese Dictionary on Google Play: https://play.google.com/store/apps/details?id=com.embermitre.hanping.app.pro\n-->\n<span class=hanzi>{{text:Simplified}}</span><br><br><a class=play_button href='android-app://com.embermitre.hanping.app.pro#Intent;action=com.hanpingchinese.cmn.intent.action.PLAY;S.p={{text:Pinyin}};S.s={{text:Simplified}};S.t=;S.LANG=cmn;S._SOURCE=anki;end'><div class=play_button><div class=play_icon></div></div></a><br>\n<script>\nfunction readHanziTypePref(langCode) {\n\tvar defaultValue = langCode == 'yue' ? 'trad' : 'simp_trad';\n\treturn readPref(langCode, 'hanzi_type', defaultValue);\n}\n\nfunction readPhoneticTypePref(langCode) {\n\tvar defaultValue = langCode == 'yue' ? 'jyutping_superscript' : 'pinyin_marked';\n\treturn readPref(langCode, 'phonetic_type', defaultValue);\n}\n\nfunction readColoringStrategyPref(langCode) {\n\treturn readPref(langCode, 'coloring_strategy', 'hanzi');\n}\n\nfunction readPref(langCode, prefNameWithoutLangCode, defaultValue) {\n\tvar prefix = '.' + langCode + '_' + prefNameWithoutLangCode + '.';\n\tfor (var i = 0; i < document.styleSheets.length; i++) {\n\t\tvar ss = document.styleSheets[i];\n\t\tif (!ss) {\n\t\t\tcontinue;\n\t\t}\n\t\ttry {\n\t\t\tvar classes = ss.rules || ss.cssRules;\n\t\t\tif (!classes) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tfor (var x = 0; x < classes.length; x++) {\n\t\t\t\tvar cls = classes[x];\n\t\t\t\tif (cls && cls.selectorText && cls.selectorText.indexOf(prefix) == 0) {\n\t\t\t\t\tvar result = cls.selectorText.substr(prefix.length);\n\t\t\t\t\tconsole.log(prefNameWithoutLangCode + \"=\" + result);\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.log(\"caught: \" + err.name + \": \" + err.message);\n\t\t\tcontinue;\n\t\t}\n\t}\n\treturn defaultValue;\n}\n\nfunction toHanzi(langCode, trad, simp, hideTones) {\n\ttrad = normalizeHanzi(trad);\n\tsimp = normalizeHanzi(simp);\n\tif (!trad && !simp) {\n\t\treturn null;\n\t}\n\tvar hanziType = readHanziTypePref(langCode);\n\tvar coloringStrategy = readColoringStrategyPref(langCode);\n\tvar coloringEnabled = !hideTones && coloringStrategy == 'hanzi';\n\tvar preferTrad = hanziType.indexOf('trad') == 0; // startsWith() doesn't work :(\n\tvar primaryHanzi = preferTrad ? trad : simp;\n\tvar secondaryHanzi = preferTrad ? simp : trad;\n\tvar showBoth = hanziType.indexOf('_') >= 0;\n\tvar result;\n\tif (!primaryHanzi) {\n\t\tresult = '[' + secondaryHanzi + ']';\n\t}\n\telse if (!secondaryHanzi || !showBoth || primaryHanzi.replace(/<.+?>/g,'') == secondaryHanzi.replace(/<.+?>/g,'')) {\n\t\tresult = primaryHanzi;\n\t}\n\telse {\n\t\tvar spanPatt = /(<span class=\"?(?:[a-z]{3}_)?tone\\d\"?>)(.+?)(<\\/span>)/;\n\t\tvar remainingPrimary = primaryHanzi;\n\t\tvar remainingSecondary = secondaryHanzi;\n\t\tvar maskedSecondary = '';\n\t\twhile (remainingPrimary != '' && remainingSecondary != '') {\n\t\t\tvar primaryMatch = spanPatt.exec(remainingPrimary);\n\t\t\tif (!primaryMatch) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tvar secondaryMatch = spanPatt.exec(remainingSecondary);\n\t\t\tif (!secondaryMatch) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tmaskedSecondary += remainingSecondary.substring(0, secondaryMatch.index);\n\t\t\tif (primaryMatch[2] == secondaryMatch[2]) { // sufficient to ignore spans when comparing\n\t\t\t\tmaskedSecondary += secondaryMatch[1] + '-' + secondaryMatch[3];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmaskedSecondary += secondaryMatch[0];\n\t\t\t}\n\t\t\tremainingPrimary = remainingPrimary.substr(primaryMatch.index + primaryMatch[0].length)\n\t\t\tremainingSecondary = remainingSecondary.substr(secondaryMatch.index + secondaryMatch[0].length)\n\t\t}\n\t\tmaskedSecondary += remainingSecondary;\n\t\tif (primaryHanzi == maskedSecondary || maskedSecondary == '') {\n\t\t\tresult = primaryHanzi;\n\t\t}\n\t\telse {\n\t\t\tresult = primaryHanzi + ' [' + maskedSecondary + ']';\n\t\t}\n\t}\n\tif (!coloringEnabled) {\n\t\treturn result.replace(/<span class=\"?(?:[a-z]{3}_)?tone\\d\"?>(.+?)<\\/span>/g, '$1');\n\t}\n\treturn result;\n}\n\nfunction normalizeHanzi(hanzi) {\n\tif (!hanzi) {\n\t\treturn '';\n\t}\n\tif (hanzi.charAt(0) == '[' && hanzi.charAt(hanzi.length - 1) == ']') {\n\t\treturn '';\n\t}\n\treturn decodeURIComponent(hanzi);\n}\n\ndocument.getElementsByClassName('hanzi')[0].innerHTML=toHanzi('cmn', '', '{{Simplified}}', true);\n</script>\n"
      },
      {
        "afmt": "\n<!--\n\"Hanping Chinese Templates for Anki\" by EmberMitre is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License.\n\nHanping Chinese Dictionary on Google Play: https://play.google.com/store/apps/details?id=com.embermitre.hanping.app.pro\n-->\n{{#Pinyin}}<a class=phonetic href='android-app://com.embermitre.hanping.app.pro#Intent;action=com.hanpingchinese.cmn.intent.action.PLAY;S.p={{text:Pinyin}};S.s={{text:Simplified}};S.t=;S.LANG=cmn;S._SOURCE=anki;end'>{{Pinyin}}</a>{{/Pinyin}}<br><br><a class=hanzi href='android-app://com.embermitre.hanping.app.pro#Intent;action=com.hanpingchinese.cmn.intent.action.DETAILS;S.p={{text:Pinyin}};S.s={{text:Simplified}};S.t=;S.LANG=cmn;S._SOURCE=anki;end'>{{Simplified}}</a><br><br><span class=meaning>{{Meaning}}</span><br><br><a class=links_button href='android-app://com.embermitre.hanping.app.pro#Intent;action=com.hanpingchinese.cmn.intent.action.LINKS;S.p={{text:Pinyin}};S.s={{text:Simplified}};S.t=;S.LANG=cmn;S._SOURCE=anki;end'>links</a>\n<script>\nfunction readHanziTypePref(langCode) {\n\tvar defaultValue = langCode == 'yue' ? 'trad' : 'simp_trad';\n\treturn readPref(langCode, 'hanzi_type', defaultValue);\n}\n\nfunction readPhoneticTypePref(langCode) {\n\tvar defaultValue = langCode == 'yue' ? 'jyutping_superscript' : 'pinyin_marked';\n\treturn readPref(langCode, 'phonetic_type', defaultValue);\n}\n\nfunction readColoringStrategyPref(langCode) {\n\treturn readPref(langCode, 'coloring_strategy', 'hanzi');\n}\n\nfunction readPref(langCode, prefNameWithoutLangCode, defaultValue) {\n\tvar prefix = '.' + langCode + '_' + prefNameWithoutLangCode + '.';\n\tfor (var i = 0; i < document.styleSheets.length; i++) {\n\t\tvar ss = document.styleSheets[i];\n\t\tif (!ss) {\n\t\t\tcontinue;\n\t\t}\n\t\ttry {\n\t\t\tvar classes = ss.rules || ss.cssRules;\n\t\t\tif (!classes) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tfor (var x = 0; x < classes.length; x++) {\n\t\t\t\tvar cls = classes[x];\n\t\t\t\tif (cls && cls.selectorText && cls.selectorText.indexOf(prefix) == 0) {\n\t\t\t\t\tvar result = cls.selectorText.substr(prefix.length);\n\t\t\t\t\tconsole.log(prefNameWithoutLangCode + \"=\" + result);\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.log(\"caught: \" + err.name + \": \" + err.message);\n\t\t\tcontinue;\n\t\t}\n\t}\n\treturn defaultValue;\n}\n\nfunction toHanzi(langCode, trad, simp, hideTones) {\n\ttrad = normalizeHanzi(trad);\n\tsimp = normalizeHanzi(simp);\n\tif (!trad && !simp) {\n\t\treturn null;\n\t}\n\tvar hanziType = readHanziTypePref(langCode);\n\tvar coloringStrategy = readColoringStrategyPref(langCode);\n\tvar coloringEnabled = !hideTones && coloringStrategy == 'hanzi';\n\tvar preferTrad = hanziType.indexOf('trad') == 0; // startsWith() doesn't work :(\n\tvar primaryHanzi = preferTrad ? trad : simp;\n\tvar secondaryHanzi = preferTrad ? simp : trad;\n\tvar showBoth = hanziType.indexOf('_') >= 0;\n\tvar result;\n\tif (!primaryHanzi) {\n\t\tresult = '[' + secondaryHanzi + ']';\n\t}\n\telse if (!secondaryHanzi || !showBoth || primaryHanzi.replace(/<.+?>/g,'') == secondaryHanzi.replace(/<.+?>/g,'')) {\n\t\tresult = primaryHanzi;\n\t}\n\telse {\n\t\tvar spanPatt = /(<span class=\"?(?:[a-z]{3}_)?tone\\d\"?>)(.+?)(<\\/span>)/;\n\t\tvar remainingPrimary = primaryHanzi;\n\t\tvar remainingSecondary = secondaryHanzi;\n\t\tvar maskedSecondary = '';\n\t\twhile (remainingPrimary != '' && remainingSecondary != '') {\n\t\t\tvar primaryMatch = spanPatt.exec(remainingPrimary);\n\t\t\tif (!primaryMatch) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tvar secondaryMatch = spanPatt.exec(remainingSecondary);\n\t\t\tif (!secondaryMatch) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tmaskedSecondary += remainingSecondary.substring(0, secondaryMatch.index);\n\t\t\tif (primaryMatch[2] == secondaryMatch[2]) { // sufficient to ignore spans when comparing\n\t\t\t\tmaskedSecondary += secondaryMatch[1] + '-' + secondaryMatch[3];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmaskedSecondary += secondaryMatch[0];\n\t\t\t}\n\t\t\tremainingPrimary = remainingPrimary.substr(primaryMatch.index + primaryMatch[0].length)\n\t\t\tremainingSecondary = remainingSecondary.substr(secondaryMatch.index + secondaryMatch[0].length)\n\t\t}\n\t\tmaskedSecondary += remainingSecondary;\n\t\tif (primaryHanzi == maskedSecondary || maskedSecondary == '') {\n\t\t\tresult = primaryHanzi;\n\t\t}\n\t\telse {\n\t\t\tresult = primaryHanzi + ' [' + maskedSecondary + ']';\n\t\t}\n\t}\n\tif (!coloringEnabled) {\n\t\treturn result.replace(/<span class=\"?(?:[a-z]{3}_)?tone\\d\"?>(.+?)<\\/span>/g, '$1');\n\t}\n\treturn result;\n}\n\nfunction normalizeHanzi(hanzi) {\n\tif (!hanzi) {\n\t\treturn '';\n\t}\n\tif (hanzi.charAt(0) == '[' && hanzi.charAt(hanzi.length - 1) == ']') {\n\t\treturn '';\n\t}\n\treturn decodeURIComponent(hanzi);\n}\n\nfunction toPhonetic(langCode, pinyinNumbered, hideTones) {\n\tif (!pinyinNumbered) {\n\t\treturn '';\n\t}\n\tpinyinNumbered = decodeURIComponent(pinyinNumbered);\n\tvar supportedLangCode = 'cmn';\n\tif (!langCode && langCode != supportedLangCode) {\n\t\tthrow 'Unexpected lang code: ' + langCode;\n\t}\n\tvar phoneticType = readPhoneticTypePref(supportedLangCode);\n\tvar coloringEnabled = readColoringStrategyPref(supportedLangCode) == 'phonetic';\n\tif (phoneticType == 'none') {\n\t\treturn '<div class=play_button><div class=play_icon></div></div>';\n\t}\n\tvar isZhuyin = phoneticType.indexOf('zhuyin') >= 0;\n\tvar toneStyle; // 0=numbers, 1=marks, other=hidden\n\tif (hideTones) {\n\t\ttoneStyle = -1;\n\t}\n\telse {\n\t\ttoneStyle = phoneticType.indexOf('marked') >= 0 ? 1 : 0;\n\t}\n\tvar showColoring = toneStyle >= 0 && coloringEnabled;\n\tvar remainingText = pinyinNumbered;\n\tvar result = '';\n\tvar patt = /\\b([a-z]{1,6})([1-5])\\b/i;\n\tvar match;\n\twhile (match = patt.exec(remainingText)) {\n\t\tvar tonelessSyllable = match[1];\n\t\tvar toneNum = match[2];\n\t\tvar newSyllable = isZhuyin ? toZhuyinSyllable(tonelessSyllable, toneNum, toneStyle) : toPinyinSyllable(tonelessSyllable, toneNum, toneStyle);\n\t\tresult += remainingText.substring(0, match.index);\n\t\tif (!newSyllable) {\n\t\t\tresult += match[1] + match[2];\n\t\t}\n\t\telse {\n\t\t\tif (showColoring) {\n\t\t\t\tresult += '<span class=' + supportedLangCode + '_tone' + match[2] + '>' + newSyllable + '</span>';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tresult += newSyllable;\n\t\t\t}\n\t\t}\n\t\tremainingText = remainingText.substr(match.index + match[0].length);\n\t}\n\treturn result + remainingText;\n}\n\nfunction toPinyinSyllable(tonelessSyllable, toneNum, toneStyle) {\n\tswitch (toneStyle) {\n\tcase 0:\n\t\treturn tonelessSyllable + toneNum;\n\tcase 1:\n\t\treturn toMarkedPinyinSyllable(tonelessSyllable, toneNum);\n\tdefault:\n\t\treturn tonelessSyllable;\n\t}\n}\n\nvar toneCharMap = {};\ntoneCharMap['a']='āáǎà';\ntoneCharMap['e']='ēéěè';\ntoneCharMap['i']='īíǐì';\ntoneCharMap['o']='ōóǒò';\ntoneCharMap['u']='ūúǔù';\ntoneCharMap['ü']='ǖǘǚǜ';\ntoneCharMap['m']=' ḿ  ';\ntoneCharMap['n']=' ńňǹ';\n\nfunction toMarkedPinyinSyllable(tonelessPinyin, toneNum) {\n\tif (toneNum < 1 || toneNum > 5 || tonelessPinyin.length < 1) {\n\t\treturn tonelessPinyin + toneNum; // not real pinyin\n\t}\n\ttonelessPinyin = tonelessPinyin.replace('v', 'ü');\n\tif (toneNum == 5) {\n\t\treturn tonelessPinyin;\n\t}\n\tvar charToReplace;\n\tvar vowels = tonelessPinyin.replace(/[^aeiouü]/g, '');\n\tswitch (vowels.length) {\n\t\tcase 0:\n\t\t\tcharToReplace = tonelessPinyin.charAt(0);\n\t\t\tbreak;\n\t\tcase 1:\n\t\t\tcharToReplace = vowels.charAt(0);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tif (vowels.indexOf(\"a\") >= 0) {\n\t\t\t\tcharToReplace = 'a';\n\t\t\t}\n\t\t\telse if (vowels.indexOf(\"e\") >= 0) {\n\t\t\t\tcharToReplace = 'e';\n\t\t\t}\n\t\t\telse if (vowels.indexOf(\"ou\") >= 0) {\n\t\t\t\tcharToReplace = 'o';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcharToReplace = vowels.charAt(1);\n\t\t\t}\n\t}\n\tvar tonesStr = toneCharMap[charToReplace];\n\tvar replacementChar = tonesStr == null ? null : tonesStr.charAt(toneNum - 1);\n\tif (replacementChar == null || replacementChar == ' ') {\n\t\treturn tonelessPinyin + toneNum;\n\t}\n\telse {\n\t\treturn tonelessPinyin.replace(charToReplace, replacementChar);\n\t}\n}\n\nvar zhuyinTonemarks = [ \"\", \"ˊ\", \"ˇ\", \"ˋ\", \"˙\" ]; // index 0 is tone 1 etc\nvar p2z = {};\np2z['a']='ㄚ';p2z['ai']='ㄞ';p2z['an']='ㄢ';p2z['ang']='ㄤ';p2z['ao']='ㄠ';p2z['ba']='ㄅㄚ';p2z['bai']='ㄅㄞ';p2z['ban']='ㄅㄢ';p2z['bang']='ㄅㄤ';p2z['bao']='ㄅㄠ';p2z['bei']='ㄅㄟ';p2z['ben']='ㄅㄣ';p2z['beng']='ㄅㄥ';p2z['bi']='ㄅㄧ';p2z['bian']='ㄅㄧㄢ';p2z['biao']='ㄅㄧㄠ';p2z['bie']='ㄅㄧㄝ';p2z['bin']='ㄅㄧㄣ';p2z['bing']='ㄅㄧㄥ';p2z['bo']='ㄅㄛ';p2z['bu']='ㄅㄨ';p2z['ca']='ㄘㄚ';p2z['cai']='ㄘㄞ';p2z['can']='ㄘㄢ';p2z['cang']='ㄘㄤ';p2z['cao']='ㄘㄠ';p2z['ce']='ㄘㄜ';p2z['cei']='ㄘㄟ';p2z['cen']='ㄘㄣ';p2z['ceng']='ㄘㄥ';p2z['cha']='ㄔㄚ';p2z['chai']='ㄔㄞ';p2z['chan']='ㄔㄢ';p2z['chang']='ㄔㄤ';p2z['chao']='ㄔㄠ';p2z['che']='ㄔㄜ';p2z['chen']='ㄔㄣ';p2z['cheng']='ㄔㄥ';p2z['chi']='ㄔ';p2z['chong']='ㄔㄨㄥ';p2z['chou']='ㄔㄡ';p2z['chu']='ㄔㄨ';p2z['chua']='ㄔㄨㄚ';p2z['chuai']='ㄔㄨㄞ';p2z['chuan']='ㄔㄨㄢ';p2z['chuang']='ㄔㄨㄤ';p2z['chui']='ㄔㄨㄟ';p2z['chun']='ㄔㄨㄣ';p2z['chuo']='ㄔㄨㄛ';p2z['ci']='ㄘ';p2z['cong']='ㄘㄨㄥ';p2z['cou']='ㄔㄡ';p2z['cu']='ㄘㄨ';p2z['cuan']='ㄘㄨㄢ';p2z['cui']='ㄘㄨㄟ';p2z['cun']='ㄘㄨㄣ';p2z['cuo']='ㄘㄨㄛ';p2z['da']='ㄉㄚ';p2z['dai']='ㄉㄞ';p2z['dan']='ㄉㄢ';p2z['dang']='ㄉㄤ';p2z['dao']='ㄉㄠ';p2z['de']='ㄉㄜ';p2z['dei']='ㄉㄟ';p2z['den']='ㄉㄣ';p2z['deng']='ㄉㄥ';p2z['di']='ㄉㄧ';p2z['dia']='ㄉㄧㄚ';p2z['dian']='ㄉㄧㄢ';p2z['diao']='ㄉㄧㄠ';p2z['die']='ㄉㄧㄝ';p2z['ding']='ㄉㄧㄥ';p2z['diu']='ㄉㄧㄡ';p2z['dong']='ㄉㄨㄥ';p2z['dou']='ㄉㄡ';p2z['du']='ㄉㄨ';p2z['duan']='ㄉㄨㄢ';p2z['dui']='ㄉㄨㄟ';p2z['dun']='ㄉㄨㄣ';p2z['duo']='ㄉㄨㄛ';p2z['e']='ㄜ';p2z['ei']='ㄟ';p2z['en']='ㄣ';p2z['eng']='ㄥ';p2z['er']='ㄦ';p2z['fa']='ㄈㄚ';p2z['fan']='ㄈㄢ';p2z['fang']='ㄈㄤ';p2z['fei']='ㄈㄟ';p2z['fen']='ㄈㄣ';p2z['feng']='ㄈㄥ';p2z['fo']='ㄈㄛ';p2z['fou']='ㄈㄡ';p2z['fu']='ㄈㄨ';p2z['ga']='ㄍㄚ';p2z['gai']='ㄍㄞ';p2z['gan']='ㄍㄢ';p2z['gang']='ㄍㄤ';p2z['gao']='ㄍㄠ';p2z['ge']='ㄍㄜ';p2z['gei']='ㄍㄟ';p2z['gen']='ㄍㄣ';p2z['geng']='ㄍㄥ';p2z['gong']='ㄍㄨㄥ';p2z['gou']='ㄍㄡ';p2z['gu']='ㄍㄨ';p2z['gua']='ㄍㄨㄚ';p2z['guai']='ㄍㄨㄞ';p2z['guan']='ㄍㄨㄢ';p2z['guang']='ㄍㄨㄤ';p2z['gui']='ㄍㄨㄟ';p2z['gun']='ㄍㄨㄣ';p2z['guo']='ㄍㄨㄛ';p2z['ha']='ㄏㄚ';p2z['hai']='ㄏㄞ';p2z['han']='ㄏㄢ';p2z['hang']='ㄏㄤ';p2z['hao']='ㄏㄠ';p2z['he']='ㄏㄜ';p2z['hei']='ㄏㄟ';p2z['hen']='ㄏㄣ';p2z['heng']='ㄏㄥ';p2z['hong']='ㄏㄨㄥ';p2z['hou']='ㄏㄡ';p2z['hu']='ㄏㄨ';p2z['hua']='ㄏㄨㄚ';p2z['huai']='ㄏㄨㄞ';p2z['huan']='ㄏㄨㄢ';p2z['huang']='ㄏㄨㄤ';p2z['hui']='ㄏㄨㄟ';p2z['hun']='ㄏㄨㄣ';p2z['huo']='ㄏㄨㄛ';p2z['ji']='ㄐㄧ';p2z['jia']='ㄐㄧㄚ';p2z['jian']='ㄐㄧㄢ';p2z['jiang']='ㄐㄧㄤ';p2z['jiao']='ㄐㄧㄠ';p2z['jie']='ㄐㄧㄝ';p2z['jin']='ㄐㄧㄣ';p2z['jing']='ㄐㄧㄥ';p2z['jiong']='ㄐㄩㄥ';p2z['jiu']='ㄐㄧㄡ';p2z['ju']='ㄐㄩ';p2z['juan']='ㄐㄩㄢ';p2z['jue']='ㄐㄩㄝ';p2z['jun']='ㄐㄩㄣ';p2z['ka']='ㄎㄚ';p2z['kai']='ㄎㄞ';p2z['kan']='ㄎㄢ';p2z['kang']='ㄎㄤ';p2z['kao']='ㄎㄠ';p2z['ke']='ㄎㄜ';p2z['kei']='ㄎㄟ';p2z['ken']='ㄎㄣ';p2z['keng']='ㄎㄥ';p2z['kong']='ㄎㄨㄥ';p2z['kou']='ㄎㄡ';p2z['ku']='ㄎㄨ';p2z['kua']='ㄎㄨㄚ';p2z['kuai']='ㄎㄨㄞ';p2z['kuan']='ㄎㄨㄢ';p2z['kuang']='ㄎㄨㄤ';p2z['kui']='ㄎㄨㄟ';p2z['kun']='ㄎㄨㄣ';p2z['kuo']='ㄎㄨㄛ';p2z['la']='ㄌㄚ';p2z['lai']='ㄌㄞ';p2z['lan']='ㄌㄢ';p2z['lang']='ㄌㄤ';p2z['lao']='ㄌㄠ';p2z['le']='ㄌㄜ';p2z['lei']='ㄌㄟ';p2z['leng']='ㄌㄥ';p2z['li']='ㄌㄧ';p2z['lia']='ㄌㄧㄚ';p2z['lian']='ㄌㄧㄢ';p2z['liang']='ㄌㄧㄤ';p2z['liao']='ㄌㄧㄠ';p2z['lie']='ㄌㄧㄝ';p2z['lin']='ㄌㄧㄣ';p2z['ling']='ㄌㄧㄥ';p2z['liu']='ㄌㄧㄡ';p2z['lo']='ㄌㄛ';p2z['long']='ㄌㄨㄥ';p2z['lou']='ㄌㄡ';p2z['lu']='ㄌㄨ';p2z['luan']='ㄌㄨㄢ';p2z['lun']='ㄌㄨㄣ';p2z['luo']='ㄌㄨㄛ';p2z['lv']='ㄌㄩ';p2z['lve']='ㄌㄩㄝ';p2z['ma']='ㄇㄚ';p2z['mai']='ㄇㄞ';p2z['man']='ㄇㄢ';p2z['mang']='ㄇㄤ';p2z['mao']='ㄇㄠ';p2z['me']='ㄇㄜ';p2z['mei']='ㄇㄟ';p2z['men']='ㄇㄣ';p2z['meng']='ㄇㄥ';p2z['mi']='ㄇㄧ';p2z['mian']='ㄇㄧㄢ';p2z['miao']='ㄇㄧㄠ';p2z['mie']='ㄇㄧㄝ';p2z['min']='ㄇㄧㄣ';p2z['ming']='ㄇㄧㄥ';p2z['miu']='ㄇㄧㄡ';p2z['mo']='ㄇㄛ';p2z['mou']='ㄇㄡ';p2z['mu']='ㄇㄨ';p2z['na']='ㄋㄚ';p2z['nai']='ㄋㄞ';p2z['nan']='ㄋㄢ';p2z['nang']='ㄋㄤ';p2z['nao']='ㄋㄠ';p2z['ne']='ㄋㄜ';p2z['nei']='ㄋㄟ';p2z['nen']='ㄋㄣ';p2z['neng']='ㄋㄥ';p2z['ni']='ㄋㄧ';p2z['nian']='ㄋㄧㄢ';p2z['niang']='ㄋㄧㄤ';p2z['niao']='ㄋㄧㄠ';p2z['nie']='ㄋㄧㄝ';p2z['nin']='ㄋㄧㄣ';p2z['ning']='ㄋㄧㄥ';p2z['niu']='ㄋㄧㄡ';p2z['nong']='ㄋㄨㄥ';p2z['nou']='ㄋㄨㄡ';p2z['nu']='ㄋㄨ';p2z['nuan']='ㄋㄨㄢ';p2z['nuo']='ㄋㄨㄛ';p2z['nv']='ㄋㄩ';p2z['nve']='ㄋㄩㄝ';p2z['o']='ㄛ';p2z['ou']='ㄡ';p2z['pa']='ㄆㄚ';p2z['pai']='ㄆㄞ';p2z['pan']='ㄆㄢ';p2z['pang']='ㄆㄤ';p2z['pao']='ㄆㄠ';p2z['pei']='ㄆㄟ';p2z['pen']='ㄆㄣ';p2z['peng']='ㄆㄥ';p2z['pi']='ㄆㄧ';p2z['pian']='ㄆㄧㄢ';p2z['piao']='ㄆㄧㄠ';p2z['pie']='ㄆㄧㄝ';p2z['pin']='ㄆㄧㄣ';p2z['ping']='ㄆㄧㄥ';p2z['po']='ㄆㄛ';p2z['pou']='ㄆㄡ';p2z['pu']='ㄆㄨ';p2z['qi']='ㄑㄧ';p2z['qia']='ㄑㄧㄚ';p2z['qian']='ㄑㄧㄢ';p2z['qiang']='ㄑㄧㄤ';p2z['qiao']='ㄑㄧㄠ';p2z['qie']='ㄑㄧㄝ';p2z['qin']='ㄑㄧㄣ';p2z['qing']='ㄑㄧㄥ';p2z['qiong']='ㄑㄩㄥ';p2z['qiu']='ㄑㄧㄡ';p2z['qu']='ㄑㄩ';p2z['quan']='ㄑㄩㄢ';p2z['que']='ㄑㄩㄝ';p2z['qun']='ㄑㄩㄣ';p2z['r']='ㄦ';p2z['ran']='ㄖㄢ';p2z['rang']='ㄖㄤ';p2z['rao']='ㄖㄠ';p2z['re']='ㄖㄜ';p2z['ren']='ㄖㄣ';p2z['reng']='ㄖㄥ';p2z['ri']='ㄖ';p2z['rong']='ㄖㄨㄥ';p2z['rou']='ㄖㄡ';p2z['ru']='ㄖㄨ';p2z['ruan']='ㄖㄨㄢ';p2z['rui']='ㄖㄨㄟ';p2z['run']='ㄖㄨㄣ';p2z['ruo']='ㄖㄨㄛ';p2z['sa']='ㄙㄚ';p2z['sai']='ㄙㄞ';p2z['san']='ㄙㄢ';p2z['sang']='ㄙㄤ';p2z['sao']='ㄙㄠ';p2z['se']='ㄙㄜ';p2z['sen']='ㄙㄣ';p2z['seng']='ㄙㄥ';p2z['sha']='ㄕㄚ';p2z['shai']='ㄕㄞ';p2z['shan']='ㄕㄢ';p2z['shang']='ㄕㄤ';p2z['shao']='ㄕㄠ';p2z['she']='ㄕㄜ';p2z['shei']='ㄕㄟ';p2z['shen']='ㄕㄣ';p2z['sheng']='ㄕㄥ';p2z['shi']='ㄕ';p2z['shou']='ㄕㄡ';p2z['shu']='ㄕㄨ';p2z['shua']='ㄕㄨㄚ';p2z['shuai']='ㄕㄨㄞ';p2z['shuan']='ㄕㄨㄢ';p2z['shuang']='ㄕㄨㄤ';p2z['shui']='ㄕㄨㄟ';p2z['shun']='ㄕㄨㄣ';p2z['shuo']='ㄕㄨㄛ';p2z['si']='ㄙ';p2z['song']='ㄙㄨㄥ';p2z['sou']='ㄙㄡ';p2z['su']='ㄙㄨ';p2z['suan']='ㄙㄨㄢ';p2z['sui']='ㄙㄨㄟ';p2z['sun']='ㄙㄨㄣ';p2z['suo']='ㄙㄨㄛ';p2z['ta']='ㄊㄚ';p2z['tai']='ㄊㄞ';p2z['tan']='ㄊㄢ';p2z['tang']='ㄊㄤ';p2z['tao']='ㄊㄠ';p2z['te']='ㄊㄜ';p2z['tei']='ㄊㄟ';p2z['teng']='ㄊㄥ';p2z['ti']='ㄊㄧ';p2z['tian']='ㄊㄧㄢ';p2z['tiao']='ㄊㄧㄠ';p2z['tie']='ㄊㄧㄝ';p2z['ting']='ㄊㄧㄥ';p2z['tong']='ㄊㄨㄥ';p2z['tou']='ㄊㄡ';p2z['tu']='ㄊㄨ';p2z['tuan']='ㄊㄨㄢ';p2z['tui']='ㄊㄨㄟ';p2z['tun']='ㄊㄨㄣ';p2z['tuo']='ㄊㄨㄛ';p2z['wa']='ㄨㄚ';p2z['wai']='ㄨㄞ';p2z['wan']='ㄨㄢ';p2z['wang']='ㄨㄤ';p2z['wei']='ㄨㄟ';p2z['wen']='ㄨㄣ';p2z['weng']='ㄨㄥ';p2z['wo']='ㄨㄛ';p2z['wu']='ㄨ';p2z['xi']='ㄒㄧ';p2z['xia']='ㄒㄧㄚ';p2z['xian']='ㄒㄧㄢ';p2z['xiang']='ㄒㄧㄤ';p2z['xiao']='ㄒㄧㄠ';p2z['xie']='ㄒㄧㄝ';p2z['xin']='ㄒㄧㄣ';p2z['xing']='ㄒㄧㄥ';p2z['xiong']='ㄒㄩㄥ';p2z['xiu']='ㄒㄧㄡ';p2z['xu']='ㄒㄩ';p2z['xuan']='ㄒㄩㄢ';p2z['xue']='ㄒㄩㄝ';p2z['xun']='ㄒㄩㄣ';p2z['ya']='ㄧㄚ';p2z['yan']='ㄧㄢ';p2z['yang']='ㄧㄤ';p2z['yao']='ㄧㄠ';p2z['ye']='ㄧㄝ';p2z['yi']='ㄧ';p2z['yin']='ㄧㄣ';p2z['ying']='ㄧㄥ';p2z['yo']='ㄧㄛ';p2z['yong']='ㄩㄥ';p2z['you']='ㄧㄡ';p2z['yu']='ㄩ';p2z['yuan']='ㄩㄢ';p2z['yue']='ㄩㄝ';p2z['yun']='ㄩㄣ';p2z['za']='ㄗㄚ';p2z['zai']='ㄗㄞ';p2z['zan']='ㄗㄢ';p2z['zang']='ㄗㄤ';p2z['zao']='ㄗㄠ';p2z['ze']='ㄗㄜ';p2z['zei']='ㄗㄟ';p2z['zen']='ㄗㄣ';p2z['zeng']='ㄗㄥ';p2z['zha']='ㄓㄚ';p2z['zhai']='ㄓㄞ';p2z['zhan']='ㄓㄢ';p2z['zhang']='ㄓㄤ';p2z['zhao']='ㄓㄠ';p2z['zhe']='ㄓㄜ';p2z['zhei']='ㄓㄟ';p2z['zhen']='ㄓㄣ';p2z['zheng']='ㄓㄥ';p2z['zhi']='ㄓ';p2z['zhong']='ㄓㄨㄥ';p2z['zhou']='ㄓㄡ';p2z['zhu']='ㄓㄨ';p2z['zhua']='ㄓㄨㄚ';p2z['zhuai']='ㄓㄨㄞ';p2z['zhuan']='ㄓㄨㄢ';p2z['zhuang']='ㄓㄨㄤ';p2z['zhui']='ㄓㄨㄟ';p2z['zhun']='ㄓㄨㄣ';p2z['zhuo']='ㄓㄨㄛ';p2z['zi']='ㄗ';p2z['zong']='ㄗㄨㄥ';p2z['zou']='ㄗㄡ';p2z['zu']='ㄗㄨ';p2z['zuan']='ㄗㄨㄢ';p2z['zui']='ㄗㄨㄟ';p2z['zun']='ㄗㄨㄣ';p2z['zuo']='ㄗㄨㄛ';\n\nfunction toZhuyinSyllable(tonelessPinyin, toneNum, toneStyle) {\n\tvar tonelessZhuyin = p2z[tonelessPinyin];\n\tif (!tonelessZhuyin || toneNum < 1 || toneNum > 5) {\n\t\treturn null;\n\t}\n\tswitch (toneStyle) {\n\tcase 0:\n\t\treturn tonelessZhuyin + toneNum;\n\tcase 1:\n\t\treturn tonelessZhuyin + zhuyinTonemarks[toneNum - 1];\n\tdefault:\n\t\treturn tonelessZhuyin;\n\t}\n}\n\nfunction toMeaning(langCode, rawMeaning, hideTones) {\n\tvar patt = /<span class=chinese_word>(.*?)\\|(.*?)\\|(.*?)<\\/span>/i;\n\tvar result = '';\n\tvar remainingText = rawMeaning;\n\tvar match;\n\twhile (match = patt.exec(remainingText)) {\n\t\tvar trad = decodeURIComponent(match[1]);\n\t\tvar simp = decodeURIComponent(match[2]);\n\t\tvar rawPhonetic = decodeURIComponent(match[3]);\n\t\tresult += remainingText.substring(0, match.index);\n\t\tresult += toHanzi(langCode, trad, simp, true);\n\t\tvar phonetic = toPhonetic(langCode, rawPhonetic, hideTones);\n\t\tif (phonetic) {\n\t\t\tresult += ' (' + phonetic + ')';\n\t\t}\n\t\tremainingText = remainingText.substr(match.index + match[0].length);\n\t};\n\tresult += remainingText;\n\tresult = result.replace(/<.+?>/g, '');\n\tresult = decodeURIComponent(result);\n\treturn result;\n}\n\ndocument.getElementsByClassName('hanzi')[0].innerHTML=toHanzi('cmn', '', '{{Simplified}}', false);\ndocument.getElementsByClassName('phonetic')[0].innerHTML=toPhonetic('cmn', '{{Pinyin}}', false);\ndocument.getElementsByClassName('meaning')[0].innerHTML=toMeaning('cmn', '{{Meaning}}', false);\n</script>\n",
        "bafmt": "",
        "bfont": "Arial",
        "bqfmt": "",
        "bsize": 12,
        "did": null,
        "name": "Pronunciation Question",
        "ord": 1,
        "qfmt": "<!--\n\"Hanping Chinese Templates for Anki\" by EmberMitre is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License.\n\nHanping Chinese Dictionary on Google Play: https://play.google.com/store/apps/details?id=com.embermitre.hanping.app.pro\n-->\n{{#Pinyin}}<a class=phonetic href='android-app://com.embermitre.hanping.app.pro#Intent;action=com.hanpingchinese.cmn.intent.action.PLAY;S.p={{text:Pinyin}};S.s={{text:Simplified}};S.t=;S.LANG=cmn;S._SOURCE=anki;end'>{{Pinyin}}</a>{{/Pinyin}}<br><br>\n<script>\nfunction readHanziTypePref(langCode) {\n\tvar defaultValue = langCode == 'yue' ? 'trad' : 'simp_trad';\n\treturn readPref(langCode, 'hanzi_type', defaultValue);\n}\n\nfunction readPhoneticTypePref(langCode) {\n\tvar defaultValue = langCode == 'yue' ? 'jyutping_superscript' : 'pinyin_marked';\n\treturn readPref(langCode, 'phonetic_type', defaultValue);\n}\n\nfunction readColoringStrategyPref(langCode) {\n\treturn readPref(langCode, 'coloring_strategy', 'hanzi');\n}\n\nfunction readPref(langCode, prefNameWithoutLangCode, defaultValue) {\n\tvar prefix = '.' + langCode + '_' + prefNameWithoutLangCode + '.';\n\tfor (var i = 0; i < document.styleSheets.length; i++) {\n\t\tvar ss = document.styleSheets[i];\n\t\tif (!ss) {\n\t\t\tcontinue;\n\t\t}\n\t\ttry {\n\t\t\tvar classes = ss.rules || ss.cssRules;\n\t\t\tif (!classes) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tfor (var x = 0; x < classes.length; x++) {\n\t\t\t\tvar cls = classes[x];\n\t\t\t\tif (cls && cls.selectorText && cls.selectorText.indexOf(prefix) == 0) {\n\t\t\t\t\tvar result = cls.selectorText.substr(prefix.length);\n\t\t\t\t\tconsole.log(prefNameWithoutLangCode + \"=\" + result);\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.log(\"caught: \" + err.name + \": \" + err.message);\n\t\t\tcontinue;\n\t\t}\n\t}\n\treturn defaultValue;\n}\n\nfunction toPhonetic(langCode, pinyinNumbered, hideTones) {\n\tif (!pinyinNumbered) {\n\t\treturn '';\n\t}\n\tpinyinNumbered = decodeURIComponent(pinyinNumbered);\n\tvar supportedLangCode = 'cmn';\n\tif (!langCode && langCode != supportedLangCode) {\n\t\tthrow 'Unexpected lang code: ' + langCode;\n\t}\n\tvar phoneticType = readPhoneticTypePref(supportedLangCode);\n\tvar coloringEnabled = readColoringStrategyPref(supportedLangCode) == 'phonetic';\n\tif (phoneticType == 'none') {\n\t\treturn '<div class=play_button><div class=play_icon></div></div>';\n\t}\n\tvar isZhuyin = phoneticType.indexOf('zhuyin') >= 0;\n\tvar toneStyle; // 0=numbers, 1=marks, other=hidden\n\tif (hideTones) {\n\t\ttoneStyle = -1;\n\t}\n\telse {\n\t\ttoneStyle = phoneticType.indexOf('marked') >= 0 ? 1 : 0;\n\t}\n\tvar showColoring = toneStyle >= 0 && coloringEnabled;\n\tvar remainingText = pinyinNumbered;\n\tvar result = '';\n\tvar patt = /\\b([a-z]{1,6})([1-5])\\b/i;\n\tvar match;\n\twhile (match = patt.exec(remainingText)) {\n\t\tvar tonelessSyllable = match[1];\n\t\tvar toneNum = match[2];\n\t\tvar newSyllable = isZhuyin ? toZhuyinSyllable(tonelessSyllable, toneNum, toneStyle) : toPinyinSyllable(tonelessSyllable, toneNum, toneStyle);\n\t\tresult += remainingText.substring(0, match.index);\n\t\tif (!newSyllable) {\n\t\t\tresult += match[1] + match[2];\n\t\t}\n\t\telse {\n\t\t\tif (showColoring) {\n\t\t\t\tresult += '<span class=' + supportedLangCode + '_tone' + match[2] + '>' + newSyllable + '</span>';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tresult += newSyllable;\n\t\t\t}\n\t\t}\n\t\tremainingText = remainingText.substr(match.index + match[0].length);\n\t}\n\treturn result + remainingText;\n}\n\nfunction toPinyinSyllable(tonelessSyllable, toneNum, toneStyle) {\n\tswitch (toneStyle) {\n\tcase 0:\n\t\treturn tonelessSyllable + toneNum;\n\tcase 1:\n\t\treturn toMarkedPinyinSyllable(tonelessSyllable, toneNum);\n\tdefault:\n\t\treturn tonelessSyllable;\n\t}\n}\n\nvar toneCharMap = {};\ntoneCharMap['a']='āáǎà';\ntoneCharMap['e']='ēéěè';\ntoneCharMap['i']='īíǐì';\ntoneCharMap['o']='ōóǒò';\ntoneCharMap['u']='ūúǔù';\ntoneCharMap['ü']='ǖǘǚǜ';\ntoneCharMap['m']=' ḿ  ';\ntoneCharMap['n']=' ńňǹ';\n\nfunction toMarkedPinyinSyllable(tonelessPinyin, toneNum) {\n\tif (toneNum < 1 || toneNum > 5 || tonelessPinyin.length < 1) {\n\t\treturn tonelessPinyin + toneNum; // not real pinyin\n\t}\n\ttonelessPinyin = tonelessPinyin.replace('v', 'ü');\n\tif (toneNum == 5) {\n\t\treturn tonelessPinyin;\n\t}\n\tvar charToReplace;\n\tvar vowels = tonelessPinyin.replace(/[^aeiouü]/g, '');\n\tswitch (vowels.length) {\n\t\tcase 0:\n\t\t\tcharToReplace = tonelessPinyin.charAt(0);\n\t\t\tbreak;\n\t\tcase 1:\n\t\t\tcharToReplace = vowels.charAt(0);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tif (vowels.indexOf(\"a\") >= 0) {\n\t\t\t\tcharToReplace = 'a';\n\t\t\t}\n\t\t\telse if (vowels.indexOf(\"e\") >= 0) {\n\t\t\t\tcharToReplace = 'e';\n\t\t\t}\n\t\t\telse if (vowels.indexOf(\"ou\") >= 0) {\n\t\t\t\tcharToReplace = 'o';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcharToReplace = vowels.charAt(1);\n\t\t\t}\n\t}\n\tvar tonesStr = toneCharMap[charToReplace];\n\tvar replacementChar = tonesStr == null ? null : tonesStr.charAt(toneNum - 1);\n\tif (replacementChar == null || replacementChar == ' ') {\n\t\treturn tonelessPinyin + toneNum;\n\t}\n\telse {\n\t\treturn tonelessPinyin.replace(charToReplace, replacementChar);\n\t}\n}\n\nvar zhuyinTonemarks = [ \"\", \"ˊ\", \"ˇ\", \"ˋ\", \"˙\" ]; // index 0 is tone 1 etc\nvar p2z = {};\np2z['a']='ㄚ';p2z['ai']='ㄞ';p2z['an']='ㄢ';p2z['ang']='ㄤ';p2z['ao']='ㄠ';p2z['ba']='ㄅㄚ';p2z['bai']='ㄅㄞ';p2z['ban']='ㄅㄢ';p2z['bang']='ㄅㄤ';p2z['bao']='ㄅㄠ';p2z['bei']='ㄅㄟ';p2z['ben']='ㄅㄣ';p2z['beng']='ㄅㄥ';p2z['bi']='ㄅㄧ';p2z['bian']='ㄅㄧㄢ';p2z['biao']='ㄅㄧㄠ';p2z['bie']='ㄅㄧㄝ';p2z['bin']='ㄅㄧㄣ';p2z['bing']='ㄅㄧㄥ';p2z['bo']='ㄅㄛ';p2z['bu']='ㄅㄨ';p2z['ca']='ㄘㄚ';p2z['cai']='ㄘㄞ';p2z['can']='ㄘㄢ';p2z['cang']='ㄘㄤ';p2z['cao']='ㄘㄠ';p2z['ce']='ㄘㄜ';p2z['cei']='ㄘㄟ';p2z['cen']='ㄘㄣ';p2z['ceng']='ㄘㄥ';p2z['cha']='ㄔㄚ';p2z['chai']='ㄔㄞ';p2z['chan']='ㄔㄢ';p2z['chang']='ㄔㄤ';p2z['chao']='ㄔㄠ';p2z['che']='ㄔㄜ';p2z['chen']='ㄔㄣ';p2z['cheng']='ㄔㄥ';p2z['chi']='ㄔ';p2z['chong']='ㄔㄨㄥ';p2z['chou']='ㄔㄡ';p2z['chu']='ㄔㄨ';p2z['chua']='ㄔㄨㄚ';p2z['chuai']='ㄔㄨㄞ';p2z['chuan']='ㄔㄨㄢ';p2z['chuang']='ㄔㄨㄤ';p2z['chui']='ㄔㄨㄟ';p2z['chun']='ㄔㄨㄣ';p2z['chuo']='ㄔㄨㄛ';p2z['ci']='ㄘ';p2z['cong']='ㄘㄨㄥ';p2z['cou']='ㄔㄡ';p2z['cu']='ㄘㄨ';p2z['cuan']='ㄘㄨㄢ';p2z['cui']='ㄘㄨㄟ';p2z['cun']='ㄘㄨㄣ';p2z['cuo']='ㄘㄨㄛ';p2z['da']='ㄉㄚ';p2z['dai']='ㄉㄞ';p2z['dan']='ㄉㄢ';p2z['dang']='ㄉㄤ';p2z['dao']='ㄉㄠ';p2z['de']='ㄉㄜ';p2z['dei']='ㄉㄟ';p2z['den']='ㄉㄣ';p2z['deng']='ㄉㄥ';p2z['di']='ㄉㄧ';p2z['dia']='ㄉㄧㄚ';p2z['dian']='ㄉㄧㄢ';p2z['diao']='ㄉㄧㄠ';p2z['die']='ㄉㄧㄝ';p2z['ding']='ㄉㄧㄥ';p2z['diu']='ㄉㄧㄡ';p2z['dong']='ㄉㄨㄥ';p2z['dou']='ㄉㄡ';p2z['du']='ㄉㄨ';p2z['duan']='ㄉㄨㄢ';p2z['dui']='ㄉㄨㄟ';p2z['dun']='ㄉㄨㄣ';p2z['duo']='ㄉㄨㄛ';p2z['e']='ㄜ';p2z['ei']='ㄟ';p2z['en']='ㄣ';p2z['eng']='ㄥ';p2z['er']='ㄦ';p2z['fa']='ㄈㄚ';p2z['fan']='ㄈㄢ';p2z['fang']='ㄈㄤ';p2z['fei']='ㄈㄟ';p2z['fen']='ㄈㄣ';p2z['feng']='ㄈㄥ';p2z['fo']='ㄈㄛ';p2z['fou']='ㄈㄡ';p2z['fu']='ㄈㄨ';p2z['ga']='ㄍㄚ';p2z['gai']='ㄍㄞ';p2z['gan']='ㄍㄢ';p2z['gang']='ㄍㄤ';p2z['gao']='ㄍㄠ';p2z['ge']='ㄍㄜ';p2z['gei']='ㄍㄟ';p2z['gen']='ㄍㄣ';p2z['geng']='ㄍㄥ';p2z['gong']='ㄍㄨㄥ';p2z['gou']='ㄍㄡ';p2z['gu']='ㄍㄨ';p2z['gua']='ㄍㄨㄚ';p2z['guai']='ㄍㄨㄞ';p2z['guan']='ㄍㄨㄢ';p2z['guang']='ㄍㄨㄤ';p2z['gui']='ㄍㄨㄟ';p2z['gun']='ㄍㄨㄣ';p2z['guo']='ㄍㄨㄛ';p2z['ha']='ㄏㄚ';p2z['hai']='ㄏㄞ';p2z['han']='ㄏㄢ';p2z['hang']='ㄏㄤ';p2z['hao']='ㄏㄠ';p2z['he']='ㄏㄜ';p2z['hei']='ㄏㄟ';p2z['hen']='ㄏㄣ';p2z['heng']='ㄏㄥ';p2z['hong']='ㄏㄨㄥ';p2z['hou']='ㄏㄡ';p2z['hu']='ㄏㄨ';p2z['hua']='ㄏㄨㄚ';p2z['huai']='ㄏㄨㄞ';p2z['huan']='ㄏㄨㄢ';p2z['huang']='ㄏㄨㄤ';p2z['hui']='ㄏㄨㄟ';p2z['hun']='ㄏㄨㄣ';p2z['huo']='ㄏㄨㄛ';p2z['ji']='ㄐㄧ';p2z['jia']='ㄐㄧㄚ';p2z['jian']='ㄐㄧㄢ';p2z['jiang']='ㄐㄧㄤ';p2z['jiao']='ㄐㄧㄠ';p2z['jie']='ㄐㄧㄝ';p2z['jin']='ㄐㄧㄣ';p2z['jing']='ㄐㄧㄥ';p2z['jiong']='ㄐㄩㄥ';p2z['jiu']='ㄐㄧㄡ';p2z['ju']='ㄐㄩ';p2z['juan']='ㄐㄩㄢ';p2z['jue']='ㄐㄩㄝ';p2z['jun']='ㄐㄩㄣ';p2z['ka']='ㄎㄚ';p2z['kai']='ㄎㄞ';p2z['kan']='ㄎㄢ';p2z['kang']='ㄎㄤ';p2z['kao']='ㄎㄠ';p2z['ke']='ㄎㄜ';p2z['kei']='ㄎㄟ';p2z['ken']='ㄎㄣ';p2z['keng']='ㄎㄥ';p2z['kong']='ㄎㄨㄥ';p2z['kou']='ㄎㄡ';p2z['ku']='ㄎㄨ';p2z['kua']='ㄎㄨㄚ';p2z['kuai']='ㄎㄨㄞ';p2z['kuan']='ㄎㄨㄢ';p2z['kuang']='ㄎㄨㄤ';p2z['kui']='ㄎㄨㄟ';p2z['kun']='ㄎㄨㄣ';p2z['kuo']='ㄎㄨㄛ';p2z['la']='ㄌㄚ';p2z['lai']='ㄌㄞ';p2z['lan']='ㄌㄢ';p2z['lang']='ㄌㄤ';p2z['lao']='ㄌㄠ';p2z['le']='ㄌㄜ';p2z['lei']='ㄌㄟ';p2z['leng']='ㄌㄥ';p2z['li']='ㄌㄧ';p2z['lia']='ㄌㄧㄚ';p2z['lian']='ㄌㄧㄢ';p2z['liang']='ㄌㄧㄤ';p2z['liao']='ㄌㄧㄠ';p2z['lie']='ㄌㄧㄝ';p2z['lin']='ㄌㄧㄣ';p2z['ling']='ㄌㄧㄥ';p2z['liu']='ㄌㄧㄡ';p2z['lo']='ㄌㄛ';p2z['long']='ㄌㄨㄥ';p2z['lou']='ㄌㄡ';p2z['lu']='ㄌㄨ';p2z['luan']='ㄌㄨㄢ';p2z['lun']='ㄌㄨㄣ';p2z['luo']='ㄌㄨㄛ';p2z['lv']='ㄌㄩ';p2z['lve']='ㄌㄩㄝ';p2z['ma']='ㄇㄚ';p2z['mai']='ㄇㄞ';p2z['man']='ㄇㄢ';p2z['mang']='ㄇㄤ';p2z['mao']='ㄇㄠ';p2z['me']='ㄇㄜ';p2z['mei']='ㄇㄟ';p2z['men']='ㄇㄣ';p2z['meng']='ㄇㄥ';p2z['mi']='ㄇㄧ';p2z['mian']='ㄇㄧㄢ';p2z['miao']='ㄇㄧㄠ';p2z['mie']='ㄇㄧㄝ';p2z['min']='ㄇㄧㄣ';p2z['ming']='ㄇㄧㄥ';p2z['miu']='ㄇㄧㄡ';p2z['mo']='ㄇㄛ';p2z['mou']='ㄇㄡ';p2z['mu']='ㄇㄨ';p2z['na']='ㄋㄚ';p2z['nai']='ㄋㄞ';p2z['nan']='ㄋㄢ';p2z['nang']='ㄋㄤ';p2z['nao']='ㄋㄠ';p2z['ne']='ㄋㄜ';p2z['nei']='ㄋㄟ';p2z['nen']='ㄋㄣ';p2z['neng']='ㄋㄥ';p2z['ni']='ㄋㄧ';p2z['nian']='ㄋㄧㄢ';p2z['niang']='ㄋㄧㄤ';p2z['niao']='ㄋㄧㄠ';p2z['nie']='ㄋㄧㄝ';p2z['nin']='ㄋㄧㄣ';p2z['ning']='ㄋㄧㄥ';p2z['niu']='ㄋㄧㄡ';p2z['nong']='ㄋㄨㄥ';p2z['nou']='ㄋㄨㄡ';p2z['nu']='ㄋㄨ';p2z['nuan']='ㄋㄨㄢ';p2z['nuo']='ㄋㄨㄛ';p2z['nv']='ㄋㄩ';p2z['nve']='ㄋㄩㄝ';p2z['o']='ㄛ';p2z['ou']='ㄡ';p2z['pa']='ㄆㄚ';p2z['pai']='ㄆㄞ';p2z['pan']='ㄆㄢ';p2z['pang']='ㄆㄤ';p2z['pao']='ㄆㄠ';p2z['pei']='ㄆㄟ';p2z['pen']='ㄆㄣ';p2z['peng']='ㄆㄥ';p2z['pi']='ㄆㄧ';p2z['pian']='ㄆㄧㄢ';p2z['piao']='ㄆㄧㄠ';p2z['pie']='ㄆㄧㄝ';p2z['pin']='ㄆㄧㄣ';p2z['ping']='ㄆㄧㄥ';p2z['po']='ㄆㄛ';p2z['pou']='ㄆㄡ';p2z['pu']='ㄆㄨ';p2z['qi']='ㄑㄧ';p2z['qia']='ㄑㄧㄚ';p2z['qian']='ㄑㄧㄢ';p2z['qiang']='ㄑㄧㄤ';p2z['qiao']='ㄑㄧㄠ';p2z['qie']='ㄑㄧㄝ';p2z['qin']='ㄑㄧㄣ';p2z['qing']='ㄑㄧㄥ';p2z['qiong']='ㄑㄩㄥ';p2z['qiu']='ㄑㄧㄡ';p2z['qu']='ㄑㄩ';p2z['quan']='ㄑㄩㄢ';p2z['que']='ㄑㄩㄝ';p2z['qun']='ㄑㄩㄣ';p2z['r']='ㄦ';p2z['ran']='ㄖㄢ';p2z['rang']='ㄖㄤ';p2z['rao']='ㄖㄠ';p2z['re']='ㄖㄜ';p2z['ren']='ㄖㄣ';p2z['reng']='ㄖㄥ';p2z['ri']='ㄖ';p2z['rong']='ㄖㄨㄥ';p2z['rou']='ㄖㄡ';p2z['ru']='ㄖㄨ';p2z['ruan']='ㄖㄨㄢ';p2z['rui']='ㄖㄨㄟ';p2z['run']='ㄖㄨㄣ';p2z['ruo']='ㄖㄨㄛ';p2z['sa']='ㄙㄚ';p2z['sai']='ㄙㄞ';p2z['san']='ㄙㄢ';p2z['sang']='ㄙㄤ';p2z['sao']='ㄙㄠ';p2z['se']='ㄙㄜ';p2z['sen']='ㄙㄣ';p2z['seng']='ㄙㄥ';p2z['sha']='ㄕㄚ';p2z['shai']='ㄕㄞ';p2z['shan']='ㄕㄢ';p2z['shang']='ㄕㄤ';p2z['shao']='ㄕㄠ';p2z['she']='ㄕㄜ';p2z['shei']='ㄕㄟ';p2z['shen']='ㄕㄣ';p2z['sheng']='ㄕㄥ';p2z['shi']='ㄕ';p2z['shou']='ㄕㄡ';p2z['shu']='ㄕㄨ';p2z['shua']='ㄕㄨㄚ';p2z['shuai']='ㄕㄨㄞ';p2z['shuan']='ㄕㄨㄢ';p2z['shuang']='ㄕㄨㄤ';p2z['shui']='ㄕㄨㄟ';p2z['shun']='ㄕㄨㄣ';p2z['shuo']='ㄕㄨㄛ';p2z['si']='ㄙ';p2z['song']='ㄙㄨㄥ';p2z['sou']='ㄙㄡ';p2z['su']='ㄙㄨ';p2z['suan']='ㄙㄨㄢ';p2z['sui']='ㄙㄨㄟ';p2z['sun']='ㄙㄨㄣ';p2z['suo']='ㄙㄨㄛ';p2z['ta']='ㄊㄚ';p2z['tai']='ㄊㄞ';p2z['tan']='ㄊㄢ';p2z['tang']='ㄊㄤ';p2z['tao']='ㄊㄠ';p2z['te']='ㄊㄜ';p2z['tei']='ㄊㄟ';p2z['teng']='ㄊㄥ';p2z['ti']='ㄊㄧ';p2z['tian']='ㄊㄧㄢ';p2z['tiao']='ㄊㄧㄠ';p2z['tie']='ㄊㄧㄝ';p2z['ting']='ㄊㄧㄥ';p2z['tong']='ㄊㄨㄥ';p2z['tou']='ㄊㄡ';p2z['tu']='ㄊㄨ';p2z['tuan']='ㄊㄨㄢ';p2z['tui']='ㄊㄨㄟ';p2z['tun']='ㄊㄨㄣ';p2z['tuo']='ㄊㄨㄛ';p2z['wa']='ㄨㄚ';p2z['wai']='ㄨㄞ';p2z['wan']='ㄨㄢ';p2z['wang']='ㄨㄤ';p2z['wei']='ㄨㄟ';p2z['wen']='ㄨㄣ';p2z['weng']='ㄨㄥ';p2z['wo']='ㄨㄛ';p2z['wu']='ㄨ';p2z['xi']='ㄒㄧ';p2z['xia']='ㄒㄧㄚ';p2z['xian']='ㄒㄧㄢ';p2z['xiang']='ㄒㄧㄤ';p2z['xiao']='ㄒㄧㄠ';p2z['xie']='ㄒㄧㄝ';p2z['xin']='ㄒㄧㄣ';p2z['xing']='ㄒㄧㄥ';p2z['xiong']='ㄒㄩㄥ';p2z['xiu']='ㄒㄧㄡ';p2z['xu']='ㄒㄩ';p2z['xuan']='ㄒㄩㄢ';p2z['xue']='ㄒㄩㄝ';p2z['xun']='ㄒㄩㄣ';p2z['ya']='ㄧㄚ';p2z['yan']='ㄧㄢ';p2z['yang']='ㄧㄤ';p2z['yao']='ㄧㄠ';p2z['ye']='ㄧㄝ';p2z['yi']='ㄧ';p2z['yin']='ㄧㄣ';p2z['ying']='ㄧㄥ';p2z['yo']='ㄧㄛ';p2z['yong']='ㄩㄥ';p2z['you']='ㄧㄡ';p2z['yu']='ㄩ';p2z['yuan']='ㄩㄢ';p2z['yue']='ㄩㄝ';p2z['yun']='ㄩㄣ';p2z['za']='ㄗㄚ';p2z['zai']='ㄗㄞ';p2z['zan']='ㄗㄢ';p2z['zang']='ㄗㄤ';p2z['zao']='ㄗㄠ';p2z['ze']='ㄗㄜ';p2z['zei']='ㄗㄟ';p2z['zen']='ㄗㄣ';p2z['zeng']='ㄗㄥ';p2z['zha']='ㄓㄚ';p2z['zhai']='ㄓㄞ';p2z['zhan']='ㄓㄢ';p2z['zhang']='ㄓㄤ';p2z['zhao']='ㄓㄠ';p2z['zhe']='ㄓㄜ';p2z['zhei']='ㄓㄟ';p2z['zhen']='ㄓㄣ';p2z['zheng']='ㄓㄥ';p2z['zhi']='ㄓ';p2z['zhong']='ㄓㄨㄥ';p2z['zhou']='ㄓㄡ';p2z['zhu']='ㄓㄨ';p2z['zhua']='ㄓㄨㄚ';p2z['zhuai']='ㄓㄨㄞ';p2z['zhuan']='ㄓㄨㄢ';p2z['zhuang']='ㄓㄨㄤ';p2z['zhui']='ㄓㄨㄟ';p2z['zhun']='ㄓㄨㄣ';p2z['zhuo']='ㄓㄨㄛ';p2z['zi']='ㄗ';p2z['zong']='ㄗㄨㄥ';p2z['zou']='ㄗㄡ';p2z['zu']='ㄗㄨ';p2z['zuan']='ㄗㄨㄢ';p2z['zui']='ㄗㄨㄟ';p2z['zun']='ㄗㄨㄣ';p2z['zuo']='ㄗㄨㄛ';\n\nfunction toZhuyinSyllable(tonelessPinyin, toneNum, toneStyle) {\n\tvar tonelessZhuyin = p2z[tonelessPinyin];\n\tif (!tonelessZhuyin || toneNum < 1 || toneNum > 5) {\n\t\treturn null;\n\t}\n\tswitch (toneStyle) {\n\tcase 0:\n\t\treturn tonelessZhuyin + toneNum;\n\tcase 1:\n\t\treturn tonelessZhuyin + zhuyinTonemarks[toneNum - 1];\n\tdefault:\n\t\treturn tonelessZhuyin;\n\t}\n}\n\ndocument.getElementsByClassName('phonetic')[0].innerHTML=toPhonetic('cmn', '{{Pinyin}}', false);\n</script>\n"
      },
      {
        "afmt": "\n<!--\n\"Hanping Chinese Templates for Anki\" by EmberMitre is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License.\n\nHanping Chinese Dictionary on Google Play: https://play.google.com/store/apps/details?id=com.embermitre.hanping.app.pro\n-->\n<span class=meaning>{{Meaning}}</span><br><br><a class=hanzi href='android-app://com.embermitre.hanping.app.pro#Intent;action=com.hanpingchinese.cmn.intent.action.DETAILS;S.p={{text:Pinyin}};S.s={{text:Simplified}};S.t=;S.LANG=cmn;S._SOURCE=anki;end'>{{Simplified}}</a><br><br>{{#Pinyin}}<a class=phonetic href='android-app://com.embermitre.hanping.app.pro#Intent;action=com.hanpingchinese.cmn.intent.action.PLAY;S.p={{text:Pinyin}};S.s={{text:Simplified}};S.t=;S.LANG=cmn;S._SOURCE=anki;end'>{{Pinyin}}</a>{{/Pinyin}}<br><br><a class=links_button href='android-app://com.embermitre.hanping.app.pro#Intent;action=com.hanpingchinese.cmn.intent.action.LINKS;S.p={{text:Pinyin}};S.s={{text:Simplified}};S.t=;S.LANG=cmn;S._SOURCE=anki;end'>links</a>\n<script>\nfunction readHanziTypePref(langCode) {\n\tvar defaultValue = langCode == 'yue' ? 'trad' : 'simp_trad';\n\treturn readPref(langCode, 'hanzi_type', defaultValue);\n}\n\nfunction readPhoneticTypePref(langCode) {\n\tvar defaultValue = langCode == 'yue' ? 'jyutping_superscript' : 'pinyin_marked';\n\treturn readPref(langCode, 'phonetic_type', defaultValue);\n}\n\nfunction readColoringStrategyPref(langCode) {\n\treturn readPref(langCode, 'coloring_strategy', 'hanzi');\n}\n\nfunction readPref(langCode, prefNameWithoutLangCode, defaultValue) {\n\tvar prefix = '.' + langCode + '_' + prefNameWithoutLangCode + '.';\n\tfor (var i = 0; i < document.styleSheets.length; i++) {\n\t\tvar ss = document.styleSheets[i];\n\t\tif (!ss) {\n\t\t\tcontinue;\n\t\t}\n\t\ttry {\n\t\t\tvar classes = ss.rules || ss.cssRules;\n\t\t\tif (!classes) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tfor (var x = 0; x < classes.length; x++) {\n\t\t\t\tvar cls = classes[x];\n\t\t\t\tif (cls && cls.selectorText && cls.selectorText.indexOf(prefix) == 0) {\n\t\t\t\t\tvar result = cls.selectorText.substr(prefix.length);\n\t\t\t\t\tconsole.log(prefNameWithoutLangCode + \"=\" + result);\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.log(\"caught: \" + err.name + \": \" + err.message);\n\t\t\tcontinue;\n\t\t}\n\t}\n\treturn defaultValue;\n}\n\nfunction toHanzi(langCode, trad, simp, hideTones) {\n\ttrad = normalizeHanzi(trad);\n\tsimp = normalizeHanzi(simp);\n\tif (!trad && !simp) {\n\t\treturn null;\n\t}\n\tvar hanziType = readHanziTypePref(langCode);\n\tvar coloringStrategy = readColoringStrategyPref(langCode);\n\tvar coloringEnabled = !hideTones && coloringStrategy == 'hanzi';\n\tvar preferTrad = hanziType.indexOf('trad') == 0; // startsWith() doesn't work :(\n\tvar primaryHanzi = preferTrad ? trad : simp;\n\tvar secondaryHanzi = preferTrad ? simp : trad;\n\tvar showBoth = hanziType.indexOf('_') >= 0;\n\tvar result;\n\tif (!primaryHanzi) {\n\t\tresult = '[' + secondaryHanzi + ']';\n\t}\n\telse if (!secondaryHanzi || !showBoth || primaryHanzi.replace(/<.+?>/g,'') == secondaryHanzi.replace(/<.+?>/g,'')) {\n\t\tresult = primaryHanzi;\n\t}\n\telse {\n\t\tvar spanPatt = /(<span class=\"?(?:[a-z]{3}_)?tone\\d\"?>)(.+?)(<\\/span>)/;\n\t\tvar remainingPrimary = primaryHanzi;\n\t\tvar remainingSecondary = secondaryHanzi;\n\t\tvar maskedSecondary = '';\n\t\twhile (remainingPrimary != '' && remainingSecondary != '') {\n\t\t\tvar primaryMatch = spanPatt.exec(remainingPrimary);\n\t\t\tif (!primaryMatch) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tvar secondaryMatch = spanPatt.exec(remainingSecondary);\n\t\t\tif (!secondaryMatch) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tmaskedSecondary += remainingSecondary.substring(0, secondaryMatch.index);\n\t\t\tif (primaryMatch[2] == secondaryMatch[2]) { // sufficient to ignore spans when comparing\n\t\t\t\tmaskedSecondary += secondaryMatch[1] + '-' + secondaryMatch[3];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmaskedSecondary += secondaryMatch[0];\n\t\t\t}\n\t\t\tremainingPrimary = remainingPrimary.substr(primaryMatch.index + primaryMatch[0].length)\n\t\t\tremainingSecondary = remainingSecondary.substr(secondaryMatch.index + secondaryMatch[0].length)\n\t\t}\n\t\tmaskedSecondary += remainingSecondary;\n\t\tif (primaryHanzi == maskedSecondary || maskedSecondary == '') {\n\t\t\tresult = primaryHanzi;\n\t\t}\n\t\telse {\n\t\t\tresult = primaryHanzi + ' [' + maskedSecondary + ']';\n\t\t}\n\t}\n\tif (!coloringEnabled) {\n\t\treturn result.replace(/<span class=\"?(?:[a-z]{3}_)?tone\\d\"?>(.+?)<\\/span>/g, '$1');\n\t}\n\treturn result;\n}\n\nfunction normalizeHanzi(hanzi) {\n\tif (!hanzi) {\n\t\treturn '';\n\t}\n\tif (hanzi.charAt(0) == '[' && hanzi.charAt(hanzi.length - 1) == ']') {\n\t\treturn '';\n\t}\n\treturn decodeURIComponent(hanzi);\n}\n\nfunction toPhonetic(langCode, pinyinNumbered, hideTones) {\n\tif (!pinyinNumbered) {\n\t\treturn '';\n\t}\n\tpinyinNumbered = decodeURIComponent(pinyinNumbered);\n\tvar supportedLangCode = 'cmn';\n\tif (!langCode && langCode != supportedLangCode) {\n\t\tthrow 'Unexpected lang code: ' + langCode;\n\t}\n\tvar phoneticType = readPhoneticTypePref(supportedLangCode);\n\tvar coloringEnabled = readColoringStrategyPref(supportedLangCode) == 'phonetic';\n\tif (phoneticType == 'none') {\n\t\treturn '<div class=play_button><div class=play_icon></div></div>';\n\t}\n\tvar isZhuyin = phoneticType.indexOf('zhuyin') >= 0;\n\tvar toneStyle; // 0=numbers, 1=marks, other=hidden\n\tif (hideTones) {\n\t\ttoneStyle = -1;\n\t}\n\telse {\n\t\ttoneStyle = phoneticType.indexOf('marked') >= 0 ? 1 : 0;\n\t}\n\tvar showColoring = toneStyle >= 0 && coloringEnabled;\n\tvar remainingText = pinyinNumbered;\n\tvar result = '';\n\tvar patt = /\\b([a-z]{1,6})([1-5])\\b/i;\n\tvar match;\n\twhile (match = patt.exec(remainingText)) {\n\t\tvar tonelessSyllable = match[1];\n\t\tvar toneNum = match[2];\n\t\tvar newSyllable = isZhuyin ? toZhuyinSyllable(tonelessSyllable, toneNum, toneStyle) : toPinyinSyllable(tonelessSyllable, toneNum, toneStyle);\n\t\tresult += remainingText.substring(0, match.index);\n\t\tif (!newSyllable) {\n\t\t\tresult += match[1] + match[2];\n\t\t}\n\t\telse {\n\t\t\tif (showColoring) {\n\t\t\t\tresult += '<span class=' + supportedLangCode + '_tone' + match[2] + '>' + newSyllable + '</span>';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tresult += newSyllable;\n\t\t\t}\n\t\t}\n\t\tremainingText = remainingText.substr(match.index + match[0].length);\n\t}\n\treturn result + remainingText;\n}\n\nfunction toPinyinSyllable(tonelessSyllable, toneNum, toneStyle) {\n\tswitch (toneStyle) {\n\tcase 0:\n\t\treturn tonelessSyllable + toneNum;\n\tcase 1:\n\t\treturn toMarkedPinyinSyllable(tonelessSyllable, toneNum);\n\tdefault:\n\t\treturn tonelessSyllable;\n\t}\n}\n\nvar toneCharMap = {};\ntoneCharMap['a']='āáǎà';\ntoneCharMap['e']='ēéěè';\ntoneCharMap['i']='īíǐì';\ntoneCharMap['o']='ōóǒò';\ntoneCharMap['u']='ūúǔù';\ntoneCharMap['ü']='ǖǘǚǜ';\ntoneCharMap['m']=' ḿ  ';\ntoneCharMap['n']=' ńňǹ';\n\nfunction toMarkedPinyinSyllable(tonelessPinyin, toneNum) {\n\tif (toneNum < 1 || toneNum > 5 || tonelessPinyin.length < 1) {\n\t\treturn tonelessPinyin + toneNum; // not real pinyin\n\t}\n\ttonelessPinyin = tonelessPinyin.replace('v', 'ü');\n\tif (toneNum == 5) {\n\t\treturn tonelessPinyin;\n\t}\n\tvar charToReplace;\n\tvar vowels = tonelessPinyin.replace(/[^aeiouü]/g, '');\n\tswitch (vowels.length) {\n\t\tcase 0:\n\t\t\tcharToReplace = tonelessPinyin.charAt(0);\n\t\t\tbreak;\n\t\tcase 1:\n\t\t\tcharToReplace = vowels.charAt(0);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tif (vowels.indexOf(\"a\") >= 0) {\n\t\t\t\tcharToReplace = 'a';\n\t\t\t}\n\t\t\telse if (vowels.indexOf(\"e\") >= 0) {\n\t\t\t\tcharToReplace = 'e';\n\t\t\t}\n\t\t\telse if (vowels.indexOf(\"ou\") >= 0) {\n\t\t\t\tcharToReplace = 'o';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcharToReplace = vowels.charAt(1);\n\t\t\t}\n\t}\n\tvar tonesStr = toneCharMap[charToReplace];\n\tvar replacementChar = tonesStr == null ? null : tonesStr.charAt(toneNum - 1);\n\tif (replacementChar == null || replacementChar == ' ') {\n\t\treturn tonelessPinyin + toneNum;\n\t}\n\telse {\n\t\treturn tonelessPinyin.replace(charToReplace, replacementChar);\n\t}\n}\n\nvar zhuyinTonemarks = [ \"\", \"ˊ\", \"ˇ\", \"ˋ\", \"˙\" ]; // index 0 is tone 1 etc\nvar p2z = {};\np2z['a']='ㄚ';p2z['ai']='ㄞ';p2z['an']='ㄢ';p2z['ang']='ㄤ';p2z['ao']='ㄠ';p2z['ba']='ㄅㄚ';p2z['bai']='ㄅㄞ';p2z['ban']='ㄅㄢ';p2z['bang']='ㄅㄤ';p2z['bao']='ㄅㄠ';p2z['bei']='ㄅㄟ';p2z['ben']='ㄅㄣ';p2z['beng']='ㄅㄥ';p2z['bi']='ㄅㄧ';p2z['bian']='ㄅㄧㄢ';p2z['biao']='ㄅㄧㄠ';p2z['bie']='ㄅㄧㄝ';p2z['bin']='ㄅㄧㄣ';p2z['bing']='ㄅㄧㄥ';p2z['bo']='ㄅㄛ';p2z['bu']='ㄅㄨ';p2z['ca']='ㄘㄚ';p2z['cai']='ㄘㄞ';p2z['can']='ㄘㄢ';p2z['cang']='ㄘㄤ';p2z['cao']='ㄘㄠ';p2z['ce']='ㄘㄜ';p2z['cei']='ㄘㄟ';p2z['cen']='ㄘㄣ';p2z['ceng']='ㄘㄥ';p2z['cha']='ㄔㄚ';p2z['chai']='ㄔㄞ';p2z['chan']='ㄔㄢ';p2z['chang']='ㄔㄤ';p2z['chao']='ㄔㄠ';p2z['che']='ㄔㄜ';p2z['chen']='ㄔㄣ';p2z['cheng']='ㄔㄥ';p2z['chi']='ㄔ';p2z['chong']='ㄔㄨㄥ';p2z['chou']='ㄔㄡ';p2z['chu']='ㄔㄨ';p2z['chua']='ㄔㄨㄚ';p2z['chuai']='ㄔㄨㄞ';p2z['chuan']='ㄔㄨㄢ';p2z['chuang']='ㄔㄨㄤ';p2z['chui']='ㄔㄨㄟ';p2z['chun']='ㄔㄨㄣ';p2z['chuo']='ㄔㄨㄛ';p2z['ci']='ㄘ';p2z['cong']='ㄘㄨㄥ';p2z['cou']='ㄔㄡ';p2z['cu']='ㄘㄨ';p2z['cuan']='ㄘㄨㄢ';p2z['cui']='ㄘㄨㄟ';p2z['cun']='ㄘㄨㄣ';p2z['cuo']='ㄘㄨㄛ';p2z['da']='ㄉㄚ';p2z['dai']='ㄉㄞ';p2z['dan']='ㄉㄢ';p2z['dang']='ㄉㄤ';p2z['dao']='ㄉㄠ';p2z['de']='ㄉㄜ';p2z['dei']='ㄉㄟ';p2z['den']='ㄉㄣ';p2z['deng']='ㄉㄥ';p2z['di']='ㄉㄧ';p2z['dia']='ㄉㄧㄚ';p2z['dian']='ㄉㄧㄢ';p2z['diao']='ㄉㄧㄠ';p2z['die']='ㄉㄧㄝ';p2z['ding']='ㄉㄧㄥ';p2z['diu']='ㄉㄧㄡ';p2z['dong']='ㄉㄨㄥ';p2z['dou']='ㄉㄡ';p2z['du']='ㄉㄨ';p2z['duan']='ㄉㄨㄢ';p2z['dui']='ㄉㄨㄟ';p2z['dun']='ㄉㄨㄣ';p2z['duo']='ㄉㄨㄛ';p2z['e']='ㄜ';p2z['ei']='ㄟ';p2z['en']='ㄣ';p2z['eng']='ㄥ';p2z['er']='ㄦ';p2z['fa']='ㄈㄚ';p2z['fan']='ㄈㄢ';p2z['fang']='ㄈㄤ';p2z['fei']='ㄈㄟ';p2z['fen']='ㄈㄣ';p2z['feng']='ㄈㄥ';p2z['fo']='ㄈㄛ';p2z['fou']='ㄈㄡ';p2z['fu']='ㄈㄨ';p2z['ga']='ㄍㄚ';p2z['gai']='ㄍㄞ';p2z['gan']='ㄍㄢ';p2z['gang']='ㄍㄤ';p2z['gao']='ㄍㄠ';p2z['ge']='ㄍㄜ';p2z['gei']='ㄍㄟ';p2z['gen']='ㄍㄣ';p2z['geng']='ㄍㄥ';p2z['gong']='ㄍㄨㄥ';p2z['gou']='ㄍㄡ';p2z['gu']='ㄍㄨ';p2z['gua']='ㄍㄨㄚ';p2z['guai']='ㄍㄨㄞ';p2z['guan']='ㄍㄨㄢ';p2z['guang']='ㄍㄨㄤ';p2z['gui']='ㄍㄨㄟ';p2z['gun']='ㄍㄨㄣ';p2z['guo']='ㄍㄨㄛ';p2z['ha']='ㄏㄚ';p2z['hai']='ㄏㄞ';p2z['han']='ㄏㄢ';p2z['hang']='ㄏㄤ';p2z['hao']='ㄏㄠ';p2z['he']='ㄏㄜ';p2z['hei']='ㄏㄟ';p2z['hen']='ㄏㄣ';p2z['heng']='ㄏㄥ';p2z['hong']='ㄏㄨㄥ';p2z['hou']='ㄏㄡ';p2z['hu']='ㄏㄨ';p2z['hua']='ㄏㄨㄚ';p2z['huai']='ㄏㄨㄞ';p2z['huan']='ㄏㄨㄢ';p2z['huang']='ㄏㄨㄤ';p2z['hui']='ㄏㄨㄟ';p2z['hun']='ㄏㄨㄣ';p2z['huo']='ㄏㄨㄛ';p2z['ji']='ㄐㄧ';p2z['jia']='ㄐㄧㄚ';p2z['jian']='ㄐㄧㄢ';p2z['jiang']='ㄐㄧㄤ';p2z['jiao']='ㄐㄧㄠ';p2z['jie']='ㄐㄧㄝ';p2z['jin']='ㄐㄧㄣ';p2z['jing']='ㄐㄧㄥ';p2z['jiong']='ㄐㄩㄥ';p2z['jiu']='ㄐㄧㄡ';p2z['ju']='ㄐㄩ';p2z['juan']='ㄐㄩㄢ';p2z['jue']='ㄐㄩㄝ';p2z['jun']='ㄐㄩㄣ';p2z['ka']='ㄎㄚ';p2z['kai']='ㄎㄞ';p2z['kan']='ㄎㄢ';p2z['kang']='ㄎㄤ';p2z['kao']='ㄎㄠ';p2z['ke']='ㄎㄜ';p2z['kei']='ㄎㄟ';p2z['ken']='ㄎㄣ';p2z['keng']='ㄎㄥ';p2z['kong']='ㄎㄨㄥ';p2z['kou']='ㄎㄡ';p2z['ku']='ㄎㄨ';p2z['kua']='ㄎㄨㄚ';p2z['kuai']='ㄎㄨㄞ';p2z['kuan']='ㄎㄨㄢ';p2z['kuang']='ㄎㄨㄤ';p2z['kui']='ㄎㄨㄟ';p2z['kun']='ㄎㄨㄣ';p2z['kuo']='ㄎㄨㄛ';p2z['la']='ㄌㄚ';p2z['lai']='ㄌㄞ';p2z['lan']='ㄌㄢ';p2z['lang']='ㄌㄤ';p2z['lao']='ㄌㄠ';p2z['le']='ㄌㄜ';p2z['lei']='ㄌㄟ';p2z['leng']='ㄌㄥ';p2z['li']='ㄌㄧ';p2z['lia']='ㄌㄧㄚ';p2z['lian']='ㄌㄧㄢ';p2z['liang']='ㄌㄧㄤ';p2z['liao']='ㄌㄧㄠ';p2z['lie']='ㄌㄧㄝ';p2z['lin']='ㄌㄧㄣ';p2z['ling']='ㄌㄧㄥ';p2z['liu']='ㄌㄧㄡ';p2z['lo']='ㄌㄛ';p2z['long']='ㄌㄨㄥ';p2z['lou']='ㄌㄡ';p2z['lu']='ㄌㄨ';p2z['luan']='ㄌㄨㄢ';p2z['lun']='ㄌㄨㄣ';p2z['luo']='ㄌㄨㄛ';p2z['lv']='ㄌㄩ';p2z['lve']='ㄌㄩㄝ';p2z['ma']='ㄇㄚ';p2z['mai']='ㄇㄞ';p2z['man']='ㄇㄢ';p2z['mang']='ㄇㄤ';p2z['mao']='ㄇㄠ';p2z['me']='ㄇㄜ';p2z['mei']='ㄇㄟ';p2z['men']='ㄇㄣ';p2z['meng']='ㄇㄥ';p2z['mi']='ㄇㄧ';p2z['mian']='ㄇㄧㄢ';p2z['miao']='ㄇㄧㄠ';p2z['mie']='ㄇㄧㄝ';p2z['min']='ㄇㄧㄣ';p2z['ming']='ㄇㄧㄥ';p2z['miu']='ㄇㄧㄡ';p2z['mo']='ㄇㄛ';p2z['mou']='ㄇㄡ';p2z['mu']='ㄇㄨ';p2z['na']='ㄋㄚ';p2z['nai']='ㄋㄞ';p2z['nan']='ㄋㄢ';p2z['nang']='ㄋㄤ';p2z['nao']='ㄋㄠ';p2z['ne']='ㄋㄜ';p2z['nei']='ㄋㄟ';p2z['nen']='ㄋㄣ';p2z['neng']='ㄋㄥ';p2z['ni']='ㄋㄧ';p2z['nian']='ㄋㄧㄢ';p2z['niang']='ㄋㄧㄤ';p2z['niao']='ㄋㄧㄠ';p2z['nie']='ㄋㄧㄝ';p2z['nin']='ㄋㄧㄣ';p2z['ning']='ㄋㄧㄥ';p2z['niu']='ㄋㄧㄡ';p2z['nong']='ㄋㄨㄥ';p2z['nou']='ㄋㄨㄡ';p2z['nu']='ㄋㄨ';p2z['nuan']='ㄋㄨㄢ';p2z['nuo']='ㄋㄨㄛ';p2z['nv']='ㄋㄩ';p2z['nve']='ㄋㄩㄝ';p2z['o']='ㄛ';p2z['ou']='ㄡ';p2z['pa']='ㄆㄚ';p2z['pai']='ㄆㄞ';p2z['pan']='ㄆㄢ';p2z['pang']='ㄆㄤ';p2z['pao']='ㄆㄠ';p2z['pei']='ㄆㄟ';p2z['pen']='ㄆㄣ';p2z['peng']='ㄆㄥ';p2z['pi']='ㄆㄧ';p2z['pian']='ㄆㄧㄢ';p2z['piao']='ㄆㄧㄠ';p2z['pie']='ㄆㄧㄝ';p2z['pin']='ㄆㄧㄣ';p2z['ping']='ㄆㄧㄥ';p2z['po']='ㄆㄛ';p2z['pou']='ㄆㄡ';p2z['pu']='ㄆㄨ';p2z['qi']='ㄑㄧ';p2z['qia']='ㄑㄧㄚ';p2z['qian']='ㄑㄧㄢ';p2z['qiang']='ㄑㄧㄤ';p2z['qiao']='ㄑㄧㄠ';p2z['qie']='ㄑㄧㄝ';p2z['qin']='ㄑㄧㄣ';p2z['qing']='ㄑㄧㄥ';p2z['qiong']='ㄑㄩㄥ';p2z['qiu']='ㄑㄧㄡ';p2z['qu']='ㄑㄩ';p2z['quan']='ㄑㄩㄢ';p2z['que']='ㄑㄩㄝ';p2z['qun']='ㄑㄩㄣ';p2z['r']='ㄦ';p2z['ran']='ㄖㄢ';p2z['rang']='ㄖㄤ';p2z['rao']='ㄖㄠ';p2z['re']='ㄖㄜ';p2z['ren']='ㄖㄣ';p2z['reng']='ㄖㄥ';p2z['ri']='ㄖ';p2z['rong']='ㄖㄨㄥ';p2z['rou']='ㄖㄡ';p2z['ru']='ㄖㄨ';p2z['ruan']='ㄖㄨㄢ';p2z['rui']='ㄖㄨㄟ';p2z['run']='ㄖㄨㄣ';p2z['ruo']='ㄖㄨㄛ';p2z['sa']='ㄙㄚ';p2z['sai']='ㄙㄞ';p2z['san']='ㄙㄢ';p2z['sang']='ㄙㄤ';p2z['sao']='ㄙㄠ';p2z['se']='ㄙㄜ';p2z['sen']='ㄙㄣ';p2z['seng']='ㄙㄥ';p2z['sha']='ㄕㄚ';p2z['shai']='ㄕㄞ';p2z['shan']='ㄕㄢ';p2z['shang']='ㄕㄤ';p2z['shao']='ㄕㄠ';p2z['she']='ㄕㄜ';p2z['shei']='ㄕㄟ';p2z['shen']='ㄕㄣ';p2z['sheng']='ㄕㄥ';p2z['shi']='ㄕ';p2z['shou']='ㄕㄡ';p2z['shu']='ㄕㄨ';p2z['shua']='ㄕㄨㄚ';p2z['shuai']='ㄕㄨㄞ';p2z['shuan']='ㄕㄨㄢ';p2z['shuang']='ㄕㄨㄤ';p2z['shui']='ㄕㄨㄟ';p2z['shun']='ㄕㄨㄣ';p2z['shuo']='ㄕㄨㄛ';p2z['si']='ㄙ';p2z['song']='ㄙㄨㄥ';p2z['sou']='ㄙㄡ';p2z['su']='ㄙㄨ';p2z['suan']='ㄙㄨㄢ';p2z['sui']='ㄙㄨㄟ';p2z['sun']='ㄙㄨㄣ';p2z['suo']='ㄙㄨㄛ';p2z['ta']='ㄊㄚ';p2z['tai']='ㄊㄞ';p2z['tan']='ㄊㄢ';p2z['tang']='ㄊㄤ';p2z['tao']='ㄊㄠ';p2z['te']='ㄊㄜ';p2z['tei']='ㄊㄟ';p2z['teng']='ㄊㄥ';p2z['ti']='ㄊㄧ';p2z['tian']='ㄊㄧㄢ';p2z['tiao']='ㄊㄧㄠ';p2z['tie']='ㄊㄧㄝ';p2z['ting']='ㄊㄧㄥ';p2z['tong']='ㄊㄨㄥ';p2z['tou']='ㄊㄡ';p2z['tu']='ㄊㄨ';p2z['tuan']='ㄊㄨㄢ';p2z['tui']='ㄊㄨㄟ';p2z['tun']='ㄊㄨㄣ';p2z['tuo']='ㄊㄨㄛ';p2z['wa']='ㄨㄚ';p2z['wai']='ㄨㄞ';p2z['wan']='ㄨㄢ';p2z['wang']='ㄨㄤ';p2z['wei']='ㄨㄟ';p2z['wen']='ㄨㄣ';p2z['weng']='ㄨㄥ';p2z['wo']='ㄨㄛ';p2z['wu']='ㄨ';p2z['xi']='ㄒㄧ';p2z['xia']='ㄒㄧㄚ';p2z['xian']='ㄒㄧㄢ';p2z['xiang']='ㄒㄧㄤ';p2z['xiao']='ㄒㄧㄠ';p2z['xie']='ㄒㄧㄝ';p2z['xin']='ㄒㄧㄣ';p2z['xing']='ㄒㄧㄥ';p2z['xiong']='ㄒㄩㄥ';p2z['xiu']='ㄒㄧㄡ';p2z['xu']='ㄒㄩ';p2z['xuan']='ㄒㄩㄢ';p2z['xue']='ㄒㄩㄝ';p2z['xun']='ㄒㄩㄣ';p2z['ya']='ㄧㄚ';p2z['yan']='ㄧㄢ';p2z['yang']='ㄧㄤ';p2z['yao']='ㄧㄠ';p2z['ye']='ㄧㄝ';p2z['yi']='ㄧ';p2z['yin']='ㄧㄣ';p2z['ying']='ㄧㄥ';p2z['yo']='ㄧㄛ';p2z['yong']='ㄩㄥ';p2z['you']='ㄧㄡ';p2z['yu']='ㄩ';p2z['yuan']='ㄩㄢ';p2z['yue']='ㄩㄝ';p2z['yun']='ㄩㄣ';p2z['za']='ㄗㄚ';p2z['zai']='ㄗㄞ';p2z['zan']='ㄗㄢ';p2z['zang']='ㄗㄤ';p2z['zao']='ㄗㄠ';p2z['ze']='ㄗㄜ';p2z['zei']='ㄗㄟ';p2z['zen']='ㄗㄣ';p2z['zeng']='ㄗㄥ';p2z['zha']='ㄓㄚ';p2z['zhai']='ㄓㄞ';p2z['zhan']='ㄓㄢ';p2z['zhang']='ㄓㄤ';p2z['zhao']='ㄓㄠ';p2z['zhe']='ㄓㄜ';p2z['zhei']='ㄓㄟ';p2z['zhen']='ㄓㄣ';p2z['zheng']='ㄓㄥ';p2z['zhi']='ㄓ';p2z['zhong']='ㄓㄨㄥ';p2z['zhou']='ㄓㄡ';p2z['zhu']='ㄓㄨ';p2z['zhua']='ㄓㄨㄚ';p2z['zhuai']='ㄓㄨㄞ';p2z['zhuan']='ㄓㄨㄢ';p2z['zhuang']='ㄓㄨㄤ';p2z['zhui']='ㄓㄨㄟ';p2z['zhun']='ㄓㄨㄣ';p2z['zhuo']='ㄓㄨㄛ';p2z['zi']='ㄗ';p2z['zong']='ㄗㄨㄥ';p2z['zou']='ㄗㄡ';p2z['zu']='ㄗㄨ';p2z['zuan']='ㄗㄨㄢ';p2z['zui']='ㄗㄨㄟ';p2z['zun']='ㄗㄨㄣ';p2z['zuo']='ㄗㄨㄛ';\n\nfunction toZhuyinSyllable(tonelessPinyin, toneNum, toneStyle) {\n\tvar tonelessZhuyin = p2z[tonelessPinyin];\n\tif (!tonelessZhuyin || toneNum < 1 || toneNum > 5) {\n\t\treturn null;\n\t}\n\tswitch (toneStyle) {\n\tcase 0:\n\t\treturn tonelessZhuyin + toneNum;\n\tcase 1:\n\t\treturn tonelessZhuyin + zhuyinTonemarks[toneNum - 1];\n\tdefault:\n\t\treturn tonelessZhuyin;\n\t}\n}\n\nfunction toMeaning(langCode, rawMeaning, hideTones) {\n\tvar patt = /<span class=chinese_word>(.*?)\\|(.*?)\\|(.*?)<\\/span>/i;\n\tvar result = '';\n\tvar remainingText = rawMeaning;\n\tvar match;\n\twhile (match = patt.exec(remainingText)) {\n\t\tvar trad = decodeURIComponent(match[1]);\n\t\tvar simp = decodeURIComponent(match[2]);\n\t\tvar rawPhonetic = decodeURIComponent(match[3]);\n\t\tresult += remainingText.substring(0, match.index);\n\t\tresult += toHanzi(langCode, trad, simp, true);\n\t\tvar phonetic = toPhonetic(langCode, rawPhonetic, hideTones);\n\t\tif (phonetic) {\n\t\t\tresult += ' (' + phonetic + ')';\n\t\t}\n\t\tremainingText = remainingText.substr(match.index + match[0].length);\n\t};\n\tresult += remainingText;\n\tresult = result.replace(/<.+?>/g, '');\n\tresult = decodeURIComponent(result);\n\treturn result;\n}\n\ndocument.getElementsByClassName('hanzi')[0].innerHTML=toHanzi('cmn', '', '{{Simplified}}', false);\ndocument.getElementsByClassName('phonetic')[0].innerHTML=toPhonetic('cmn', '{{Pinyin}}', false);\ndocument.getElementsByClassName('meaning')[0].innerHTML=toMeaning('cmn', '{{Meaning}}', false);\n</script>\n",
        "bafmt": "",
        "bfont": "Arial",
        "bqfmt": "",
        "bsize": 12,
        "did": null,
        "name": "Meaning Question",
        "ord": 2,
        "qfmt": "<!--\n\"Hanping Chinese Templates for Anki\" by EmberMitre is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License.\n\nHanping Chinese Dictionary on Google Play: https://play.google.com/store/apps/details?id=com.embermitre.hanping.app.pro\n-->\n<span class=meaning>{{Meaning}}</span><br><br><a class=play_button href='android-app://com.embermitre.hanping.app.pro#Intent;action=com.hanpingchinese.cmn.intent.action.PLAY;S.p={{text:Pinyin}};S.s={{text:Simplified}};S.t=;S.LANG=cmn;S._SOURCE=anki;end'><div class=play_button><div class=play_icon></div></div></a><br>\n<script>\nfunction readHanziTypePref(langCode) {\n\tvar defaultValue = langCode == 'yue' ? 'trad' : 'simp_trad';\n\treturn readPref(langCode, 'hanzi_type', defaultValue);\n}\n\nfunction readPhoneticTypePref(langCode) {\n\tvar defaultValue = langCode == 'yue' ? 'jyutping_superscript' : 'pinyin_marked';\n\treturn readPref(langCode, 'phonetic_type', defaultValue);\n}\n\nfunction readColoringStrategyPref(langCode) {\n\treturn readPref(langCode, 'coloring_strategy', 'hanzi');\n}\n\nfunction readPref(langCode, prefNameWithoutLangCode, defaultValue) {\n\tvar prefix = '.' + langCode + '_' + prefNameWithoutLangCode + '.';\n\tfor (var i = 0; i < document.styleSheets.length; i++) {\n\t\tvar ss = document.styleSheets[i];\n\t\tif (!ss) {\n\t\t\tcontinue;\n\t\t}\n\t\ttry {\n\t\t\tvar classes = ss.rules || ss.cssRules;\n\t\t\tif (!classes) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tfor (var x = 0; x < classes.length; x++) {\n\t\t\t\tvar cls = classes[x];\n\t\t\t\tif (cls && cls.selectorText && cls.selectorText.indexOf(prefix) == 0) {\n\t\t\t\t\tvar result = cls.selectorText.substr(prefix.length);\n\t\t\t\t\tconsole.log(prefNameWithoutLangCode + \"=\" + result);\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.log(\"caught: \" + err.name + \": \" + err.message);\n\t\t\tcontinue;\n\t\t}\n\t}\n\treturn defaultValue;\n}\n\nfunction toHanzi(langCode, trad, simp, hideTones) {\n\ttrad = normalizeHanzi(trad);\n\tsimp = normalizeHanzi(simp);\n\tif (!trad && !simp) {\n\t\treturn null;\n\t}\n\tvar hanziType = readHanziTypePref(langCode);\n\tvar coloringStrategy = readColoringStrategyPref(langCode);\n\tvar coloringEnabled = !hideTones && coloringStrategy == 'hanzi';\n\tvar preferTrad = hanziType.indexOf('trad') == 0; // startsWith() doesn't work :(\n\tvar primaryHanzi = preferTrad ? trad : simp;\n\tvar secondaryHanzi = preferTrad ? simp : trad;\n\tvar showBoth = hanziType.indexOf('_') >= 0;\n\tvar result;\n\tif (!primaryHanzi) {\n\t\tresult = '[' + secondaryHanzi + ']';\n\t}\n\telse if (!secondaryHanzi || !showBoth || primaryHanzi.replace(/<.+?>/g,'') == secondaryHanzi.replace(/<.+?>/g,'')) {\n\t\tresult = primaryHanzi;\n\t}\n\telse {\n\t\tvar spanPatt = /(<span class=\"?(?:[a-z]{3}_)?tone\\d\"?>)(.+?)(<\\/span>)/;\n\t\tvar remainingPrimary = primaryHanzi;\n\t\tvar remainingSecondary = secondaryHanzi;\n\t\tvar maskedSecondary = '';\n\t\twhile (remainingPrimary != '' && remainingSecondary != '') {\n\t\t\tvar primaryMatch = spanPatt.exec(remainingPrimary);\n\t\t\tif (!primaryMatch) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tvar secondaryMatch = spanPatt.exec(remainingSecondary);\n\t\t\tif (!secondaryMatch) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tmaskedSecondary += remainingSecondary.substring(0, secondaryMatch.index);\n\t\t\tif (primaryMatch[2] == secondaryMatch[2]) { // sufficient to ignore spans when comparing\n\t\t\t\tmaskedSecondary += secondaryMatch[1] + '-' + secondaryMatch[3];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmaskedSecondary += secondaryMatch[0];\n\t\t\t}\n\t\t\tremainingPrimary = remainingPrimary.substr(primaryMatch.index + primaryMatch[0].length)\n\t\t\tremainingSecondary = remainingSecondary.substr(secondaryMatch.index + secondaryMatch[0].length)\n\t\t}\n\t\tmaskedSecondary += remainingSecondary;\n\t\tif (primaryHanzi == maskedSecondary || maskedSecondary == '') {\n\t\t\tresult = primaryHanzi;\n\t\t}\n\t\telse {\n\t\t\tresult = primaryHanzi + ' [' + maskedSecondary + ']';\n\t\t}\n\t}\n\tif (!coloringEnabled) {\n\t\treturn result.replace(/<span class=\"?(?:[a-z]{3}_)?tone\\d\"?>(.+?)<\\/span>/g, '$1');\n\t}\n\treturn result;\n}\n\nfunction normalizeHanzi(hanzi) {\n\tif (!hanzi) {\n\t\treturn '';\n\t}\n\tif (hanzi.charAt(0) == '[' && hanzi.charAt(hanzi.length - 1) == ']') {\n\t\treturn '';\n\t}\n\treturn decodeURIComponent(hanzi);\n}\n\nfunction toPhonetic(langCode, pinyinNumbered, hideTones) {\n\tif (!pinyinNumbered) {\n\t\treturn '';\n\t}\n\tpinyinNumbered = decodeURIComponent(pinyinNumbered);\n\tvar supportedLangCode = 'cmn';\n\tif (!langCode && langCode != supportedLangCode) {\n\t\tthrow 'Unexpected lang code: ' + langCode;\n\t}\n\tvar phoneticType = readPhoneticTypePref(supportedLangCode);\n\tvar coloringEnabled = readColoringStrategyPref(supportedLangCode) == 'phonetic';\n\tif (phoneticType == 'none') {\n\t\treturn '<div class=play_button><div class=play_icon></div></div>';\n\t}\n\tvar isZhuyin = phoneticType.indexOf('zhuyin') >= 0;\n\tvar toneStyle; // 0=numbers, 1=marks, other=hidden\n\tif (hideTones) {\n\t\ttoneStyle = -1;\n\t}\n\telse {\n\t\ttoneStyle = phoneticType.indexOf('marked') >= 0 ? 1 : 0;\n\t}\n\tvar showColoring = toneStyle >= 0 && coloringEnabled;\n\tvar remainingText = pinyinNumbered;\n\tvar result = '';\n\tvar patt = /\\b([a-z]{1,6})([1-5])\\b/i;\n\tvar match;\n\twhile (match = patt.exec(remainingText)) {\n\t\tvar tonelessSyllable = match[1];\n\t\tvar toneNum = match[2];\n\t\tvar newSyllable = isZhuyin ? toZhuyinSyllable(tonelessSyllable, toneNum, toneStyle) : toPinyinSyllable(tonelessSyllable, toneNum, toneStyle);\n\t\tresult += remainingText.substring(0, match.index);\n\t\tif (!newSyllable) {\n\t\t\tresult += match[1] + match[2];\n\t\t}\n\t\telse {\n\t\t\tif (showColoring) {\n\t\t\t\tresult += '<span class=' + supportedLangCode + '_tone' + match[2] + '>' + newSyllable + '</span>';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tresult += newSyllable;\n\t\t\t}\n\t\t}\n\t\tremainingText = remainingText.substr(match.index + match[0].length);\n\t}\n\treturn result + remainingText;\n}\n\nfunction toPinyinSyllable(tonelessSyllable, toneNum, toneStyle) {\n\tswitch (toneStyle) {\n\tcase 0:\n\t\treturn tonelessSyllable + toneNum;\n\tcase 1:\n\t\treturn toMarkedPinyinSyllable(tonelessSyllable, toneNum);\n\tdefault:\n\t\treturn tonelessSyllable;\n\t}\n}\n\nvar toneCharMap = {};\ntoneCharMap['a']='āáǎà';\ntoneCharMap['e']='ēéěè';\ntoneCharMap['i']='īíǐì';\ntoneCharMap['o']='ōóǒò';\ntoneCharMap['u']='ūúǔù';\ntoneCharMap['ü']='ǖǘǚǜ';\ntoneCharMap['m']=' ḿ  ';\ntoneCharMap['n']=' ńňǹ';\n\nfunction toMarkedPinyinSyllable(tonelessPinyin, toneNum) {\n\tif (toneNum < 1 || toneNum > 5 || tonelessPinyin.length < 1) {\n\t\treturn tonelessPinyin + toneNum; // not real pinyin\n\t}\n\ttonelessPinyin = tonelessPinyin.replace('v', 'ü');\n\tif (toneNum == 5) {\n\t\treturn tonelessPinyin;\n\t}\n\tvar charToReplace;\n\tvar vowels = tonelessPinyin.replace(/[^aeiouü]/g, '');\n\tswitch (vowels.length) {\n\t\tcase 0:\n\t\t\tcharToReplace = tonelessPinyin.charAt(0);\n\t\t\tbreak;\n\t\tcase 1:\n\t\t\tcharToReplace = vowels.charAt(0);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tif (vowels.indexOf(\"a\") >= 0) {\n\t\t\t\tcharToReplace = 'a';\n\t\t\t}\n\t\t\telse if (vowels.indexOf(\"e\") >= 0) {\n\t\t\t\tcharToReplace = 'e';\n\t\t\t}\n\t\t\telse if (vowels.indexOf(\"ou\") >= 0) {\n\t\t\t\tcharToReplace = 'o';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcharToReplace = vowels.charAt(1);\n\t\t\t}\n\t}\n\tvar tonesStr = toneCharMap[charToReplace];\n\tvar replacementChar = tonesStr == null ? null : tonesStr.charAt(toneNum - 1);\n\tif (replacementChar == null || replacementChar == ' ') {\n\t\treturn tonelessPinyin + toneNum;\n\t}\n\telse {\n\t\treturn tonelessPinyin.replace(charToReplace, replacementChar);\n\t}\n}\n\nvar zhuyinTonemarks = [ \"\", \"ˊ\", \"ˇ\", \"ˋ\", \"˙\" ]; // index 0 is tone 1 etc\nvar p2z = {};\np2z['a']='ㄚ';p2z['ai']='ㄞ';p2z['an']='ㄢ';p2z['ang']='ㄤ';p2z['ao']='ㄠ';p2z['ba']='ㄅㄚ';p2z['bai']='ㄅㄞ';p2z['ban']='ㄅㄢ';p2z['bang']='ㄅㄤ';p2z['bao']='ㄅㄠ';p2z['bei']='ㄅㄟ';p2z['ben']='ㄅㄣ';p2z['beng']='ㄅㄥ';p2z['bi']='ㄅㄧ';p2z['bian']='ㄅㄧㄢ';p2z['biao']='ㄅㄧㄠ';p2z['bie']='ㄅㄧㄝ';p2z['bin']='ㄅㄧㄣ';p2z['bing']='ㄅㄧㄥ';p2z['bo']='ㄅㄛ';p2z['bu']='ㄅㄨ';p2z['ca']='ㄘㄚ';p2z['cai']='ㄘㄞ';p2z['can']='ㄘㄢ';p2z['cang']='ㄘㄤ';p2z['cao']='ㄘㄠ';p2z['ce']='ㄘㄜ';p2z['cei']='ㄘㄟ';p2z['cen']='ㄘㄣ';p2z['ceng']='ㄘㄥ';p2z['cha']='ㄔㄚ';p2z['chai']='ㄔㄞ';p2z['chan']='ㄔㄢ';p2z['chang']='ㄔㄤ';p2z['chao']='ㄔㄠ';p2z['che']='ㄔㄜ';p2z['chen']='ㄔㄣ';p2z['cheng']='ㄔㄥ';p2z['chi']='ㄔ';p2z['chong']='ㄔㄨㄥ';p2z['chou']='ㄔㄡ';p2z['chu']='ㄔㄨ';p2z['chua']='ㄔㄨㄚ';p2z['chuai']='ㄔㄨㄞ';p2z['chuan']='ㄔㄨㄢ';p2z['chuang']='ㄔㄨㄤ';p2z['chui']='ㄔㄨㄟ';p2z['chun']='ㄔㄨㄣ';p2z['chuo']='ㄔㄨㄛ';p2z['ci']='ㄘ';p2z['cong']='ㄘㄨㄥ';p2z['cou']='ㄔㄡ';p2z['cu']='ㄘㄨ';p2z['cuan']='ㄘㄨㄢ';p2z['cui']='ㄘㄨㄟ';p2z['cun']='ㄘㄨㄣ';p2z['cuo']='ㄘㄨㄛ';p2z['da']='ㄉㄚ';p2z['dai']='ㄉㄞ';p2z['dan']='ㄉㄢ';p2z['dang']='ㄉㄤ';p2z['dao']='ㄉㄠ';p2z['de']='ㄉㄜ';p2z['dei']='ㄉㄟ';p2z['den']='ㄉㄣ';p2z['deng']='ㄉㄥ';p2z['di']='ㄉㄧ';p2z['dia']='ㄉㄧㄚ';p2z['dian']='ㄉㄧㄢ';p2z['diao']='ㄉㄧㄠ';p2z['die']='ㄉㄧㄝ';p2z['ding']='ㄉㄧㄥ';p2z['diu']='ㄉㄧㄡ';p2z['dong']='ㄉㄨㄥ';p2z['dou']='ㄉㄡ';p2z['du']='ㄉㄨ';p2z['duan']='ㄉㄨㄢ';p2z['dui']='ㄉㄨㄟ';p2z['dun']='ㄉㄨㄣ';p2z['duo']='ㄉㄨㄛ';p2z['e']='ㄜ';p2z['ei']='ㄟ';p2z['en']='ㄣ';p2z['eng']='ㄥ';p2z['er']='ㄦ';p2z['fa']='ㄈㄚ';p2z['fan']='ㄈㄢ';p2z['fang']='ㄈㄤ';p2z['fei']='ㄈㄟ';p2z['fen']='ㄈㄣ';p2z['feng']='ㄈㄥ';p2z['fo']='ㄈㄛ';p2z['fou']='ㄈㄡ';p2z['fu']='ㄈㄨ';p2z['ga']='ㄍㄚ';p2z['gai']='ㄍㄞ';p2z['gan']='ㄍㄢ';p2z['gang']='ㄍㄤ';p2z['gao']='ㄍㄠ';p2z['ge']='ㄍㄜ';p2z['gei']='ㄍㄟ';p2z['gen']='ㄍㄣ';p2z['geng']='ㄍㄥ';p2z['gong']='ㄍㄨㄥ';p2z['gou']='ㄍㄡ';p2z['gu']='ㄍㄨ';p2z['gua']='ㄍㄨㄚ';p2z['guai']='ㄍㄨㄞ';p2z['guan']='ㄍㄨㄢ';p2z['guang']='ㄍㄨㄤ';p2z['gui']='ㄍㄨㄟ';p2z['gun']='ㄍㄨㄣ';p2z['guo']='ㄍㄨㄛ';p2z['ha']='ㄏㄚ';p2z['hai']='ㄏㄞ';p2z['han']='ㄏㄢ';p2z['hang']='ㄏㄤ';p2z['hao']='ㄏㄠ';p2z['he']='ㄏㄜ';p2z['hei']='ㄏㄟ';p2z['hen']='ㄏㄣ';p2z['heng']='ㄏㄥ';p2z['hong']='ㄏㄨㄥ';p2z['hou']='ㄏㄡ';p2z['hu']='ㄏㄨ';p2z['hua']='ㄏㄨㄚ';p2z['huai']='ㄏㄨㄞ';p2z['huan']='ㄏㄨㄢ';p2z['huang']='ㄏㄨㄤ';p2z['hui']='ㄏㄨㄟ';p2z['hun']='ㄏㄨㄣ';p2z['huo']='ㄏㄨㄛ';p2z['ji']='ㄐㄧ';p2z['jia']='ㄐㄧㄚ';p2z['jian']='ㄐㄧㄢ';p2z['jiang']='ㄐㄧㄤ';p2z['jiao']='ㄐㄧㄠ';p2z['jie']='ㄐㄧㄝ';p2z['jin']='ㄐㄧㄣ';p2z['jing']='ㄐㄧㄥ';p2z['jiong']='ㄐㄩㄥ';p2z['jiu']='ㄐㄧㄡ';p2z['ju']='ㄐㄩ';p2z['juan']='ㄐㄩㄢ';p2z['jue']='ㄐㄩㄝ';p2z['jun']='ㄐㄩㄣ';p2z['ka']='ㄎㄚ';p2z['kai']='ㄎㄞ';p2z['kan']='ㄎㄢ';p2z['kang']='ㄎㄤ';p2z['kao']='ㄎㄠ';p2z['ke']='ㄎㄜ';p2z['kei']='ㄎㄟ';p2z['ken']='ㄎㄣ';p2z['keng']='ㄎㄥ';p2z['kong']='ㄎㄨㄥ';p2z['kou']='ㄎㄡ';p2z['ku']='ㄎㄨ';p2z['kua']='ㄎㄨㄚ';p2z['kuai']='ㄎㄨㄞ';p2z['kuan']='ㄎㄨㄢ';p2z['kuang']='ㄎㄨㄤ';p2z['kui']='ㄎㄨㄟ';p2z['kun']='ㄎㄨㄣ';p2z['kuo']='ㄎㄨㄛ';p2z['la']='ㄌㄚ';p2z['lai']='ㄌㄞ';p2z['lan']='ㄌㄢ';p2z['lang']='ㄌㄤ';p2z['lao']='ㄌㄠ';p2z['le']='ㄌㄜ';p2z['lei']='ㄌㄟ';p2z['leng']='ㄌㄥ';p2z['li']='ㄌㄧ';p2z['lia']='ㄌㄧㄚ';p2z['lian']='ㄌㄧㄢ';p2z['liang']='ㄌㄧㄤ';p2z['liao']='ㄌㄧㄠ';p2z['lie']='ㄌㄧㄝ';p2z['lin']='ㄌㄧㄣ';p2z['ling']='ㄌㄧㄥ';p2z['liu']='ㄌㄧㄡ';p2z['lo']='ㄌㄛ';p2z['long']='ㄌㄨㄥ';p2z['lou']='ㄌㄡ';p2z['lu']='ㄌㄨ';p2z['luan']='ㄌㄨㄢ';p2z['lun']='ㄌㄨㄣ';p2z['luo']='ㄌㄨㄛ';p2z['lv']='ㄌㄩ';p2z['lve']='ㄌㄩㄝ';p2z['ma']='ㄇㄚ';p2z['mai']='ㄇㄞ';p2z['man']='ㄇㄢ';p2z['mang']='ㄇㄤ';p2z['mao']='ㄇㄠ';p2z['me']='ㄇㄜ';p2z['mei']='ㄇㄟ';p2z['men']='ㄇㄣ';p2z['meng']='ㄇㄥ';p2z['mi']='ㄇㄧ';p2z['mian']='ㄇㄧㄢ';p2z['miao']='ㄇㄧㄠ';p2z['mie']='ㄇㄧㄝ';p2z['min']='ㄇㄧㄣ';p2z['ming']='ㄇㄧㄥ';p2z['miu']='ㄇㄧㄡ';p2z['mo']='ㄇㄛ';p2z['mou']='ㄇㄡ';p2z['mu']='ㄇㄨ';p2z['na']='ㄋㄚ';p2z['nai']='ㄋㄞ';p2z['nan']='ㄋㄢ';p2z['nang']='ㄋㄤ';p2z['nao']='ㄋㄠ';p2z['ne']='ㄋㄜ';p2z['nei']='ㄋㄟ';p2z['nen']='ㄋㄣ';p2z['neng']='ㄋㄥ';p2z['ni']='ㄋㄧ';p2z['nian']='ㄋㄧㄢ';p2z['niang']='ㄋㄧㄤ';p2z['niao']='ㄋㄧㄠ';p2z['nie']='ㄋㄧㄝ';p2z['nin']='ㄋㄧㄣ';p2z['ning']='ㄋㄧㄥ';p2z['niu']='ㄋㄧㄡ';p2z['nong']='ㄋㄨㄥ';p2z['nou']='ㄋㄨㄡ';p2z['nu']='ㄋㄨ';p2z['nuan']='ㄋㄨㄢ';p2z['nuo']='ㄋㄨㄛ';p2z['nv']='ㄋㄩ';p2z['nve']='ㄋㄩㄝ';p2z['o']='ㄛ';p2z['ou']='ㄡ';p2z['pa']='ㄆㄚ';p2z['pai']='ㄆㄞ';p2z['pan']='ㄆㄢ';p2z['pang']='ㄆㄤ';p2z['pao']='ㄆㄠ';p2z['pei']='ㄆㄟ';p2z['pen']='ㄆㄣ';p2z['peng']='ㄆㄥ';p2z['pi']='ㄆㄧ';p2z['pian']='ㄆㄧㄢ';p2z['piao']='ㄆㄧㄠ';p2z['pie']='ㄆㄧㄝ';p2z['pin']='ㄆㄧㄣ';p2z['ping']='ㄆㄧㄥ';p2z['po']='ㄆㄛ';p2z['pou']='ㄆㄡ';p2z['pu']='ㄆㄨ';p2z['qi']='ㄑㄧ';p2z['qia']='ㄑㄧㄚ';p2z['qian']='ㄑㄧㄢ';p2z['qiang']='ㄑㄧㄤ';p2z['qiao']='ㄑㄧㄠ';p2z['qie']='ㄑㄧㄝ';p2z['qin']='ㄑㄧㄣ';p2z['qing']='ㄑㄧㄥ';p2z['qiong']='ㄑㄩㄥ';p2z['qiu']='ㄑㄧㄡ';p2z['qu']='ㄑㄩ';p2z['quan']='ㄑㄩㄢ';p2z['que']='ㄑㄩㄝ';p2z['qun']='ㄑㄩㄣ';p2z['r']='ㄦ';p2z['ran']='ㄖㄢ';p2z['rang']='ㄖㄤ';p2z['rao']='ㄖㄠ';p2z['re']='ㄖㄜ';p2z['ren']='ㄖㄣ';p2z['reng']='ㄖㄥ';p2z['ri']='ㄖ';p2z['rong']='ㄖㄨㄥ';p2z['rou']='ㄖㄡ';p2z['ru']='ㄖㄨ';p2z['ruan']='ㄖㄨㄢ';p2z['rui']='ㄖㄨㄟ';p2z['run']='ㄖㄨㄣ';p2z['ruo']='ㄖㄨㄛ';p2z['sa']='ㄙㄚ';p2z['sai']='ㄙㄞ';p2z['san']='ㄙㄢ';p2z['sang']='ㄙㄤ';p2z['sao']='ㄙㄠ';p2z['se']='ㄙㄜ';p2z['sen']='ㄙㄣ';p2z['seng']='ㄙㄥ';p2z['sha']='ㄕㄚ';p2z['shai']='ㄕㄞ';p2z['shan']='ㄕㄢ';p2z['shang']='ㄕㄤ';p2z['shao']='ㄕㄠ';p2z['she']='ㄕㄜ';p2z['shei']='ㄕㄟ';p2z['shen']='ㄕㄣ';p2z['sheng']='ㄕㄥ';p2z['shi']='ㄕ';p2z['shou']='ㄕㄡ';p2z['shu']='ㄕㄨ';p2z['shua']='ㄕㄨㄚ';p2z['shuai']='ㄕㄨㄞ';p2z['shuan']='ㄕㄨㄢ';p2z['shuang']='ㄕㄨㄤ';p2z['shui']='ㄕㄨㄟ';p2z['shun']='ㄕㄨㄣ';p2z['shuo']='ㄕㄨㄛ';p2z['si']='ㄙ';p2z['song']='ㄙㄨㄥ';p2z['sou']='ㄙㄡ';p2z['su']='ㄙㄨ';p2z['suan']='ㄙㄨㄢ';p2z['sui']='ㄙㄨㄟ';p2z['sun']='ㄙㄨㄣ';p2z['suo']='ㄙㄨㄛ';p2z['ta']='ㄊㄚ';p2z['tai']='ㄊㄞ';p2z['tan']='ㄊㄢ';p2z['tang']='ㄊㄤ';p2z['tao']='ㄊㄠ';p2z['te']='ㄊㄜ';p2z['tei']='ㄊㄟ';p2z['teng']='ㄊㄥ';p2z['ti']='ㄊㄧ';p2z['tian']='ㄊㄧㄢ';p2z['tiao']='ㄊㄧㄠ';p2z['tie']='ㄊㄧㄝ';p2z['ting']='ㄊㄧㄥ';p2z['tong']='ㄊㄨㄥ';p2z['tou']='ㄊㄡ';p2z['tu']='ㄊㄨ';p2z['tuan']='ㄊㄨㄢ';p2z['tui']='ㄊㄨㄟ';p2z['tun']='ㄊㄨㄣ';p2z['tuo']='ㄊㄨㄛ';p2z['wa']='ㄨㄚ';p2z['wai']='ㄨㄞ';p2z['wan']='ㄨㄢ';p2z['wang']='ㄨㄤ';p2z['wei']='ㄨㄟ';p2z['wen']='ㄨㄣ';p2z['weng']='ㄨㄥ';p2z['wo']='ㄨㄛ';p2z['wu']='ㄨ';p2z['xi']='ㄒㄧ';p2z['xia']='ㄒㄧㄚ';p2z['xian']='ㄒㄧㄢ';p2z['xiang']='ㄒㄧㄤ';p2z['xiao']='ㄒㄧㄠ';p2z['xie']='ㄒㄧㄝ';p2z['xin']='ㄒㄧㄣ';p2z['xing']='ㄒㄧㄥ';p2z['xiong']='ㄒㄩㄥ';p2z['xiu']='ㄒㄧㄡ';p2z['xu']='ㄒㄩ';p2z['xuan']='ㄒㄩㄢ';p2z['xue']='ㄒㄩㄝ';p2z['xun']='ㄒㄩㄣ';p2z['ya']='ㄧㄚ';p2z['yan']='ㄧㄢ';p2z['yang']='ㄧㄤ';p2z['yao']='ㄧㄠ';p2z['ye']='ㄧㄝ';p2z['yi']='ㄧ';p2z['yin']='ㄧㄣ';p2z['ying']='ㄧㄥ';p2z['yo']='ㄧㄛ';p2z['yong']='ㄩㄥ';p2z['you']='ㄧㄡ';p2z['yu']='ㄩ';p2z['yuan']='ㄩㄢ';p2z['yue']='ㄩㄝ';p2z['yun']='ㄩㄣ';p2z['za']='ㄗㄚ';p2z['zai']='ㄗㄞ';p2z['zan']='ㄗㄢ';p2z['zang']='ㄗㄤ';p2z['zao']='ㄗㄠ';p2z['ze']='ㄗㄜ';p2z['zei']='ㄗㄟ';p2z['zen']='ㄗㄣ';p2z['zeng']='ㄗㄥ';p2z['zha']='ㄓㄚ';p2z['zhai']='ㄓㄞ';p2z['zhan']='ㄓㄢ';p2z['zhang']='ㄓㄤ';p2z['zhao']='ㄓㄠ';p2z['zhe']='ㄓㄜ';p2z['zhei']='ㄓㄟ';p2z['zhen']='ㄓㄣ';p2z['zheng']='ㄓㄥ';p2z['zhi']='ㄓ';p2z['zhong']='ㄓㄨㄥ';p2z['zhou']='ㄓㄡ';p2z['zhu']='ㄓㄨ';p2z['zhua']='ㄓㄨㄚ';p2z['zhuai']='ㄓㄨㄞ';p2z['zhuan']='ㄓㄨㄢ';p2z['zhuang']='ㄓㄨㄤ';p2z['zhui']='ㄓㄨㄟ';p2z['zhun']='ㄓㄨㄣ';p2z['zhuo']='ㄓㄨㄛ';p2z['zi']='ㄗ';p2z['zong']='ㄗㄨㄥ';p2z['zou']='ㄗㄡ';p2z['zu']='ㄗㄨ';p2z['zuan']='ㄗㄨㄢ';p2z['zui']='ㄗㄨㄟ';p2z['zun']='ㄗㄨㄣ';p2z['zuo']='ㄗㄨㄛ';\n\nfunction toZhuyinSyllable(tonelessPinyin, toneNum, toneStyle) {\n\tvar tonelessZhuyin = p2z[tonelessPinyin];\n\tif (!tonelessZhuyin || toneNum < 1 || toneNum > 5) {\n\t\treturn null;\n\t}\n\tswitch (toneStyle) {\n\tcase 0:\n\t\treturn tonelessZhuyin + toneNum;\n\tcase 1:\n\t\treturn tonelessZhuyin + zhuyinTonemarks[toneNum - 1];\n\tdefault:\n\t\treturn tonelessZhuyin;\n\t}\n}\n\nfunction toMeaning(langCode, rawMeaning, hideTones) {\n\tvar patt = /<span class=chinese_word>(.*?)\\|(.*?)\\|(.*?)<\\/span>/i;\n\tvar result = '';\n\tvar remainingText = rawMeaning;\n\tvar match;\n\twhile (match = patt.exec(remainingText)) {\n\t\tvar trad = decodeURIComponent(match[1]);\n\t\tvar simp = decodeURIComponent(match[2]);\n\t\tvar rawPhonetic = decodeURIComponent(match[3]);\n\t\tresult += remainingText.substring(0, match.index);\n\t\tresult += toHanzi(langCode, trad, simp, true);\n\t\tvar phonetic = toPhonetic(langCode, rawPhonetic, hideTones);\n\t\tif (phonetic) {\n\t\t\tresult += ' (' + phonetic + ')';\n\t\t}\n\t\tremainingText = remainingText.substr(match.index + match[0].length);\n\t};\n\tresult += remainingText;\n\tresult = result.replace(/<.+?>/g, '');\n\tresult = decodeURIComponent(result);\n\treturn result;\n}\n\ndocument.getElementsByClassName('meaning')[0].innerHTML=toMeaning('cmn', '{{Meaning}}', false);\n</script>\n"
      }
    ],
    "type": 0,
    "usn": 0,
    "vers": []
  }
}
