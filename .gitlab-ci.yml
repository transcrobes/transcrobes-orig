image: python:3.8-slim

variables:
  POSTGRES_DB: tc_db
  POSTGRES_USER: tc_user
  POSTGRES_PASSWORD: tc_pass
  POSTGRES_DATABASE: tc_db
  POSTGRES_HOST: db
  POSTGRES_PORT: 5432
  DJANGO_SETTINGS_MODULE: 'transcrobes.settings'
  CORENLP_HOST: corenlp  # TODO: not yet used in tests
  ANKROBES_HOST: ankrobes  # TODO: not yet used in tests
  BING_SUBSCRIPTION_KEY: a_great_key  # TODO: not yet used in tests
  PYTHONDONTWRITEBYTECODE: 1
  GIT_SUBMODULE_STRATEGY: recursive
  CONTAINER_IMAGE: ${CI_REGISTRY}/${CI_PROJECT_PATH}:${CI_COMMIT_SHORT_SHA}
  CONTAINER_IMAGE_LATEST: ${CI_REGISTRY}/${CI_PROJECT_PATH}:latest
  CONTAINER_IMAGE_TAG: ${CI_REGISTRY}/${CI_PROJECT_PATH}:${CI_COMMIT_TAG}
  EXT_REG_IMG: ${EXT_REG_REGISTRY}/${EXT_REG_ORGANISATION}/${CI_PROJECT_NAME}:${CI_COMMIT_SHORT_SHA}
  EXT_REG_IMG_LATEST: ${EXT_REG_REGISTRY}/${EXT_REG_ORGANISATION}/${CI_PROJECT_NAME}:latest
  EXT_REG_IMG_TAG: ${EXT_REG_REGISTRY}/${EXT_REG_ORGANISATION}/${CI_PROJECT_NAME}:${CI_COMMIT_TAG}
  APP_PATH: /app

cache:
  paths:
    - ~/.cache/pip/

stages:
  - test
  - release

test:
  stage: test
  services:
    - name: postgres:12
      alias: db

  before_script:
    - apt update && apt install -y gcc git && apt -y autoremove && apt -y clean && rm -rf /var/lib/apt/lists/*
    - pip install -r requirements.ci.txt

  variables:
    DATABASE_URL: "postgresql://$POSTGRES_USER:$POSTGRES_PASSWORD@postgres:5432/$POSTGRES_DB"

  script:
    - ./runtests.sh

coverage:
  stage: test
  services:
    - name: postgres:12
      alias: db

  before_script:
    - apt update && apt install -y gcc git && apt -y autoremove && apt -y clean && rm -rf /var/lib/apt/lists/*
    - pip install -r requirements.ci.txt

  variables:
    DATABASE_URL: "postgresql://$POSTGRES_USER:$POSTGRES_PASSWORD@postgres:5432/$POSTGRES_DB"

  script:
    - ./runcoverage.sh
  coverage: '/TOTAL.+ ([0-9]{1,3}%)/'
  artifacts:
    paths:
      - build
    expire_in: 30 days

release-latest:
  stage: release
  image: docker:latest
  services:
   - docker:dind

  script:
    - export DOCKER_HOST=tcp://docker:2375/
    - docker login -u gitlab-ci-token -p ${CI_BUILD_TOKEN} ${CI_REGISTRY}
    - docker build --pull -t ${CONTAINER_IMAGE} .
    - docker tag ${CONTAINER_IMAGE} ${CONTAINER_IMAGE_LATEST}
    - docker push ${CONTAINER_IMAGE}
    - docker push ${CONTAINER_IMAGE_LATEST}
    - docker login -u ${EXT_REG_USER} -p ${EXT_REG_PASSWORD} ${EXT_REG_REGISTRY}
    - docker tag ${CONTAINER_IMAGE} ${EXT_REG_IMG}
    - docker tag ${CONTAINER_IMAGE} ${EXT_REG_IMG_LATEST}
    - docker push ${EXT_REG_IMG}
    - docker push ${EXT_REG_IMG_LATEST}
  only:
    - master
  except:
    - tags

release-tag:
  stage: release
  image: docker:latest
  services:
   - docker:dind
  script:
    - export DOCKER_HOST=tcp://docker:2375/
    - docker login -u gitlab-ci-token -p ${CI_BUILD_TOKEN} ${CI_REGISTRY}
    - docker build --pull -t ${CONTAINER_IMAGE} .
    - docker tag ${CONTAINER_IMAGE} ${CONTAINER_IMAGE_TAG}
    - docker tag ${CONTAINER_IMAGE} ${CONTAINER_IMAGE_LATEST}
    - docker push ${CONTAINER_IMAGE}
    - docker push ${CONTAINER_IMAGE_TAG}
    - docker push ${CONTAINER_IMAGE_LATEST}
    - docker login -u ${EXT_REG_USER} -p ${EXT_REG_PASSWORD} ${EXT_REG_REGISTRY}
    - docker tag ${CONTAINER_IMAGE} ${EXT_REG_IMG}
    - docker tag ${CONTAINER_IMAGE} ${EXT_REG_IMG_LATEST}
    - docker tag ${CONTAINER_IMAGE} ${EXT_REG_IMG_TAG}
    - docker push ${EXT_REG_IMG}
    - docker push ${EXT_REG_IMG_LATEST}
    - docker push ${EXT_REG_IMG_TAG}
  only:
    - tags
